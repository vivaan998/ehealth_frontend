[{"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\index.js":"1","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\reportWebVitals.js":"2","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\App\\index.js":"3","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\App\\AppClient.js":"4","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\layout\\default.js":"5","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\index.js":"6","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\index.js":"7","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\layout\\components\\DefaultSidebar.js":"8","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\layout\\components\\DefaultNavbar.js":"9","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\index.js":"10","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Pages\\Login\\index.js":"11","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\layout\\components\\NavbarUser.js":"12","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\layout\\components\\SidebarMiddleNav.js":"13","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\Sidebar\\SidebarBottomA.js":"14","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\LogoThemed\\LogoThemed.js":"15","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\Sidebar\\SidebarTopA.js":"16","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Appointments.js":"17","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\DashboardGeneral.js":"18","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Immunizations.js":"19","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\MedicalReport.js":"20","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Patients.js":"21","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Practitioners.js":"22","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Providers.js":"23","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Vaccines.js":"24","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Theme\\index.js":"25","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Nav\\index.js":"26","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Navbar\\index.js":"27","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\index.js":"28","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarTrigger\\index.js":"29","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\index.js":"30","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\ExtendedDropdown\\index.js":"31","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\IconWithBadge\\index.js":"32","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\InputGroupAddon\\index.js":"33","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarMenu\\index.js":"34","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledPopover\\index.js":"35","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\CustomInput\\index.js":"36","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\EmptyLayout\\index.js":"37","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Pages\\Login\\Login.js":"38","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\FooterText.js":"39","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\utilities.js":"40","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\VersionSelector.js":"41","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\Pages\\FooterAuth.js":"42","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Theme\\ThemeClass.js":"43","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Theme\\ThemeProvider.js":"44","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Theme\\ThemeContext.js":"45","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Nav\\nav.js":"46","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Navbar\\navbar.js":"47","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\Sidebar.js":"48","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarSection.js":"49","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarClose.js":"50","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarMobileFluid.js":"51","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarShowSlim.js":"52","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarHideSlim.js":"53","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarTrigger\\SidebarTrigger.js":"54","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\Avatar.js":"55","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\AvatarFont.js":"56","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\AvatarImage.js":"57","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\AvatarAddonBadge.js":"58","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\AvatarAddonIcon.js":"59","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\ExtendedDropdown\\ExtendedDropdown.js":"60","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\ExtendedDropdown\\ExtendedDropdownSection.js":"61","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\ExtendedDropdown\\ExtendedDropdownLink.js":"62","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\IconWithBadge\\IconWithBadge.js":"63","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\InputGroupAddon\\InputGroupAddon.js":"64","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledPopover\\UncontrolledPopover.js":"65","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\CustomInput\\CustomInput.js":"66","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\EmptyLayout\\EmptyLayout.js":"67","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\EmptyLayout\\EmptyLayoutSection.js":"68","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarMenu\\SidebarMenu.js":"69","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarMenu\\SidebarMenuItem.js":"70","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Theme\\ThemeSelector.js":"71","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\Pages\\HeaderAuth.js":"72","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarContent.js":"73","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarMenu\\MenuContext.js":"74","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\config.js":"75","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\OuterClick\\index.js":"76","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\common.js":"77","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\OuterClick\\OuterClick.js":"78","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\AuthenticationService.js":"79","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\config\\Endpoint.js":"80","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\config\\Config.js":"81","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\MenuListingService.js":"82","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\HeaderMain.js":"83","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\ProvidersTable.js":"84","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\ImmunizationsTable.js":"85","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\AppointmentsTable.js":"86","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\VaccinesTable.js":"87","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\CustomPaginationPanel.js":"88","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\CustomSearch.js":"89","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\CustomExportButton.js":"90","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\CustomSizePerPageButton.js":"91","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\CustomPaginationTotal.js":"92","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\filters\\index.js":"93","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\filters\\selectFilter.js":"94","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\filters\\textFilter.js":"95","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\filters\\numberFilter.js":"96","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledModal\\index.js":"97","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledModal\\UncontrolledModalClose.js":"98","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledModal\\UncontrolledModal.js":"99","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledModal\\context.js":"100","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledModal\\UncontrolledModalSave.js":"101","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\ProvidersService.js":"102","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\VaccinesService.js":"103","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\PractitionersTable.js":"104","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\PractitionersService.js":"105","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\index.js":"106","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\LayoutContent.js":"107","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\LayoutNavbar.js":"108","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\LayoutSidebar.js":"109","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\withPageConfig.js":"110","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\setupPage.js":"111","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\PageConfigContext.js":"112","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\Layout.js":"113","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\PatientsTable.js":"114","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\PatientsService.js":"115","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\ImmunizationsService.js":"116","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\AppointmentsService.js":"117"},{"size":642,"mtime":1613048484457,"results":"118","hashOfConfig":"119"},{"size":375,"mtime":1612332730250,"results":"120","hashOfConfig":"119"},{"size":65,"mtime":1612332730182,"results":"121","hashOfConfig":"119"},{"size":518,"mtime":1612332730181,"results":"122","hashOfConfig":"119"},{"size":2252,"mtime":1612794781069,"results":"123","hashOfConfig":"119"},{"size":1527,"mtime":1612885645133,"results":"124","hashOfConfig":"119"},{"size":2546,"mtime":1613063602734,"results":"125","hashOfConfig":"119"},{"size":3452,"mtime":1613124585035,"results":"126","hashOfConfig":"119"},{"size":2354,"mtime":1613121392931,"results":"127","hashOfConfig":"119"},{"size":503,"mtime":1612422598691,"results":"128","hashOfConfig":"119"},{"size":53,"mtime":1612430415646,"results":"129","hashOfConfig":"119"},{"size":1364,"mtime":1612795388802,"results":"130","hashOfConfig":"119"},{"size":18202,"mtime":1613121392942,"results":"131","hashOfConfig":"119"},{"size":1985,"mtime":1612422598694,"results":"132","hashOfConfig":"119"},{"size":1749,"mtime":1613014780060,"results":"133","hashOfConfig":"119"},{"size":4723,"mtime":1613128102231,"results":"134","hashOfConfig":"119"},{"size":648,"mtime":1613114227667,"results":"135","hashOfConfig":"119"},{"size":829,"mtime":1613063603466,"results":"136","hashOfConfig":"119"},{"size":654,"mtime":1613114227667,"results":"137","hashOfConfig":"119"},{"size":152,"mtime":1612422598688,"results":"138","hashOfConfig":"119"},{"size":568,"mtime":1612983666282,"results":"139","hashOfConfig":"119"},{"size":662,"mtime":1612962557201,"results":"140","hashOfConfig":"119"},{"size":629,"mtime":1613114227669,"results":"141","hashOfConfig":"119"},{"size":946,"mtime":1613114227670,"results":"142","hashOfConfig":"119"},{"size":160,"mtime":1612332730189,"results":"143","hashOfConfig":"119"},{"size":53,"mtime":1612353098756,"results":"144","hashOfConfig":"119"},{"size":60,"mtime":1612353098757,"results":"145","hashOfConfig":"119"},{"size":516,"mtime":1613120807478,"results":"146","hashOfConfig":"119"},{"size":84,"mtime":1613120807187,"results":"147","hashOfConfig":"119"},{"size":431,"mtime":1612353098733,"results":"148","hashOfConfig":"119"},{"size":326,"mtime":1612353098737,"results":"149","hashOfConfig":"119"},{"size":83,"mtime":1612353098738,"results":"150","hashOfConfig":"119"},{"size":88,"mtime":1612353098740,"results":"151","hashOfConfig":"119"},{"size":170,"mtime":1613120808179,"results":"152","hashOfConfig":"119"},{"size":99,"mtime":1612422598669,"results":"153","hashOfConfig":"119"},{"size":77,"mtime":1612430577009,"results":"154","hashOfConfig":"119"},{"size":182,"mtime":1612430624462,"results":"155","hashOfConfig":"119"},{"size":9015,"mtime":1613099795598,"results":"156","hashOfConfig":"119"},{"size":446,"mtime":1612431530145,"results":"157","hashOfConfig":"119"},{"size":343,"mtime":1612422598698,"results":"158","hashOfConfig":"119"},{"size":4940,"mtime":1612422598697,"results":"159","hashOfConfig":"119"},{"size":372,"mtime":1612429962977,"results":"160","hashOfConfig":"119"},{"size":651,"mtime":1612332730188,"results":"161","hashOfConfig":"119"},{"size":1191,"mtime":1612332730188,"results":"162","hashOfConfig":"119"},{"size":119,"mtime":1612414588309,"results":"163","hashOfConfig":"119"},{"size":546,"mtime":1612353098756,"results":"164","hashOfConfig":"119"},{"size":1639,"mtime":1612353098758,"results":"165","hashOfConfig":"119"},{"size":1103,"mtime":1613120807262,"results":"166","hashOfConfig":"119"},{"size":634,"mtime":1613120807474,"results":"167","hashOfConfig":"119"},{"size":272,"mtime":1613120807463,"results":"168","hashOfConfig":"119"},{"size":482,"mtime":1613120807469,"results":"169","hashOfConfig":"119"},{"size":469,"mtime":1613120807476,"results":"170","hashOfConfig":"119"},{"size":469,"mtime":1613120807467,"results":"171","hashOfConfig":"119"},{"size":940,"mtime":1613122043667,"results":"172","hashOfConfig":"119"},{"size":2354,"mtime":1612353098728,"results":"173","hashOfConfig":"119"},{"size":1699,"mtime":1612353098732,"results":"174","hashOfConfig":"119"},{"size":1694,"mtime":1612353098733,"results":"175","hashOfConfig":"119"},{"size":509,"mtime":1612353098730,"results":"176","hashOfConfig":"119"},{"size":685,"mtime":1612353098731,"results":"177","hashOfConfig":"119"},{"size":469,"mtime":1612353098734,"results":"178","hashOfConfig":"119"},{"size":836,"mtime":1612353098736,"results":"179","hashOfConfig":"119"},{"size":695,"mtime":1612353098735,"results":"180","hashOfConfig":"119"},{"size":730,"mtime":1612353098738,"results":"181","hashOfConfig":"119"},{"size":1030,"mtime":1612353098739,"results":"182","hashOfConfig":"119"},{"size":2023,"mtime":1612422598669,"results":"183","hashOfConfig":"119"},{"size":495,"mtime":1612430577005,"results":"184","hashOfConfig":"119"},{"size":1197,"mtime":1612430624352,"results":"185","hashOfConfig":"119"},{"size":1024,"mtime":1612430624419,"results":"186","hashOfConfig":"119"},{"size":5278,"mtime":1613120807797,"results":"187","hashOfConfig":"119"},{"size":5305,"mtime":1613120808178,"results":"188","hashOfConfig":"119"},{"size":6810,"mtime":1612332730189,"results":"189","hashOfConfig":"119"},{"size":1102,"mtime":1612465069784,"results":"190","hashOfConfig":"119"},{"size":2169,"mtime":1613120807465,"results":"191","hashOfConfig":"119"},{"size":176,"mtime":1613120807795,"results":"192","hashOfConfig":"119"},{"size":1141,"mtime":1613048812536,"results":"193","hashOfConfig":"119"},{"size":72,"mtime":1613120808608,"results":"194","hashOfConfig":"119"},{"size":114,"mtime":1612353098720,"results":"195","hashOfConfig":"119"},{"size":2370,"mtime":1613120808602,"results":"196","hashOfConfig":"119"},{"size":1284,"mtime":1612706362894,"results":"197","hashOfConfig":"119"},{"size":824,"mtime":1613106584858,"results":"198","hashOfConfig":"119"},{"size":108,"mtime":1612962557165,"results":"199","hashOfConfig":"119"},{"size":885,"mtime":1612701460529,"results":"200","hashOfConfig":"119"},{"size":687,"mtime":1612794781086,"results":"201","hashOfConfig":"119"},{"size":16346,"mtime":1613114228354,"results":"202","hashOfConfig":"119"},{"size":17478,"mtime":1613128009556,"results":"203","hashOfConfig":"119"},{"size":13006,"mtime":1613128021877,"results":"204","hashOfConfig":"119"},{"size":14597,"mtime":1613128273991,"results":"205","hashOfConfig":"119"},{"size":1218,"mtime":1612965224827,"results":"206","hashOfConfig":"119"},{"size":1783,"mtime":1613046217945,"results":"207","hashOfConfig":"119"},{"size":592,"mtime":1612794781076,"results":"208","hashOfConfig":"119"},{"size":1265,"mtime":1612962297960,"results":"209","hashOfConfig":"119"},{"size":365,"mtime":1612961238251,"results":"210","hashOfConfig":"119"},{"size":95,"mtime":1612794781083,"results":"211","hashOfConfig":"119"},{"size":2528,"mtime":1612794781085,"results":"212","hashOfConfig":"119"},{"size":2321,"mtime":1612794781086,"results":"213","hashOfConfig":"119"},{"size":4356,"mtime":1612794781084,"results":"214","hashOfConfig":"119"},{"size":329,"mtime":1612864259540,"results":"215","hashOfConfig":"119"},{"size":760,"mtime":1612863220576,"results":"216","hashOfConfig":"119"},{"size":1773,"mtime":1612863854052,"results":"217","hashOfConfig":"119"},{"size":129,"mtime":1612855989229,"results":"218","hashOfConfig":"119"},{"size":796,"mtime":1612864242600,"results":"219","hashOfConfig":"119"},{"size":2429,"mtime":1613034919239,"results":"220","hashOfConfig":"119"},{"size":2454,"mtime":1613106625739,"results":"221","hashOfConfig":"119"},{"size":30089,"mtime":1613114228499,"results":"222","hashOfConfig":"119"},{"size":3398,"mtime":1613038081163,"results":"223","hashOfConfig":"119"},{"size":654,"mtime":1612982718427,"results":"224","hashOfConfig":"119"},{"size":329,"mtime":1612982718370,"results":"225","hashOfConfig":"119"},{"size":463,"mtime":1612982718422,"results":"226","hashOfConfig":"119"},{"size":657,"mtime":1612982718424,"results":"227","hashOfConfig":"119"},{"size":401,"mtime":1612982718495,"results":"228","hashOfConfig":"119"},{"size":942,"mtime":1612982718494,"results":"229","hashOfConfig":"119"},{"size":119,"mtime":1612982718425,"results":"230","hashOfConfig":"119"},{"size":10018,"mtime":1612983141031,"results":"231","hashOfConfig":"119"},{"size":27658,"mtime":1613114484364,"results":"232","hashOfConfig":"119"},{"size":2506,"mtime":1613105336916,"results":"233","hashOfConfig":"119"},{"size":2476,"mtime":1613114582050,"results":"234","hashOfConfig":"119"},{"size":992,"mtime":1613114227746,"results":"235","hashOfConfig":"119"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"239"},"15voz50",{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"239"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"239"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"239"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"239"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"239"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"239"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"239"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"239"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"239"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"239"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"239"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"239"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"239"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"239"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"239"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"239"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"239"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"239"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"239"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"239"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"239"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"239"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"239"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"239"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"239"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"239"},"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\index.js",["498","499"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { render } from 'react-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// render(\r\n//   <App />,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n",["500","501"],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\reportWebVitals.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\App\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\App\\AppClient.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\layout\\default.js",["502","503"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    Layout,\r\n    ThemeSelector,\r\n    ThemeProvider,\r\n    PageConfigConsumer,\r\n} from './../components';\r\n\r\nimport './../styles/bootstrap.scss';\r\nimport './../styles/main.scss';\r\nimport './../styles/plugins/plugins.scss';\r\nimport './../styles/plugins/plugins.css';\r\n\r\nimport {\r\n    RoutedNavbars,\r\n    RoutedSidebars,\r\n} from './../routes';\r\n\r\nconst favIcons = [\r\n    {rel: 'icon', type: 'image/x-icon', href: './../images/favicons/favicon.ico'},\r\n\r\n    { rel: 'apple-touch-icon', sizes: '180x180', href: './../images/favicons/apple-touch-icon.png'},\r\n\r\n    { rel: 'icon', type: 'image/png', sizes: '32x32', href: './../images/favicons/favicon-32x32.png' },\r\n    { rel: 'icon', type: 'image/png', sizes: '16x16', href: './../images/favicons/favicon-16x16.png' }\r\n];\r\n\r\nclass AppLayout extends React.Component {\r\n    static propTypes = {\r\n        children: PropTypes.node.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        console.log(favIcons)\r\n        \r\n        return (\r\n            <ThemeProvider initialStyle=\"light\" initialColor=\"primary\">\r\n                <Layout sidebarSlim favIcons={ favIcons }>\r\n                    { /* --------- Navbar ----------- */ }\r\n                    <Layout.Navbar>\r\n                        <RoutedNavbars />\r\n                    </Layout.Navbar>\r\n                    { /* -------- Sidebar ------------*/ }\r\n                    <Layout.Sidebar>\r\n                        <RoutedSidebars />\r\n                    </Layout.Sidebar>\r\n\r\n                    { /* -------- Content ------------*/ }\r\n                    <Layout.Content>\r\n                        { children }\r\n                    </Layout.Content>\r\n\r\n                    { /* -- Theme Selector (DEMO) ----*/ }\r\n                    {/* <PageConfigConsumer>\r\n                    {\r\n                        ({ sidebarHidden, navbarHidden }) => (\r\n                            <ThemeSelector styleDisabled={ sidebarHidden && navbarHidden } />\r\n                        )\r\n                    }\r\n                    </PageConfigConsumer> */}\r\n                </Layout>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppLayout;\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\layout\\components\\DefaultSidebar.js",["504","505","506"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuListingService from '../../services/MenuListingService'\r\nimport AuthenticationService from '../../services/AuthenticationService';\r\nimport {\r\n    Sidebar,\r\n    SidebarTrigger,\r\n} from './../../components';\r\n\r\nimport SidebarMiddleNav from './SidebarMiddleNav';\r\n\r\nimport SidebarTopA from '../../routes/components/Sidebar/SidebarTopA'\r\nimport { SidebarBottomA } from '../../routes/components/Sidebar/SidebarBottomA'\r\nimport { LogoThemed } from '../../routes/components/LogoThemed/LogoThemed';\r\nimport Config from './../../config/Config';\r\n\r\nclass DefaultSidebar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            profileData: 'Default User',\r\n            menuItems: '',\r\n            menuList: '',\r\n        }\r\n    }\r\n    getMenu = async () => {\r\n        try{\r\n            const response = await MenuListingService.getMenu();\r\n            if (response.status == true){\r\n                this.setState({\r\n                    profileData: response.data.data,\r\n                    menuItems: response.data.menu,\r\n                    isLoading: false,\r\n                    \r\n                });\r\n                Config.profileData = this.state.profileData;\r\n                console.log('menuItems >>>', this.state.menuItems);\r\n                let menu;\r\n                var temp = this.state.menuItems;\r\n                menu = (temp).map(o => o.title);\r\n                    this.setState({\r\n                        menuList: menu\r\n                });\r\n\r\n            }\r\n        }\r\n        catch(e){\r\n            console.log('error >>>', e);\r\n            console.log(e, e.data);\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => { \r\n        if (AuthenticationService.getUser()){\r\n            this.getMenu();\r\n            \r\n        }\r\n        else{\r\n            this.props.history.push({\r\n                pathname: \"/login\",\r\n            })\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Sidebar>\r\n                { /* START SIDEBAR-OVERLAY: Close (x) */ }\r\n                <Sidebar.Close>\r\n                    <SidebarTrigger tag={ 'a' } href=\"javascript:;\">\r\n                        <i className=\"fa fa-times-circle fa-fw\"></i>\r\n                    </SidebarTrigger>\r\n                </Sidebar.Close>\r\n                { /* START SIDEBAR-OVERLAY: Close (x) */ }\r\n                \r\n                { /* START SIDEBAR: Only for Desktop */ }\r\n                <Sidebar.HideSlim>\r\n                    <Sidebar.Section>\r\n                        <Link to=\"/\" className=\"sidebar__brand\">\r\n                            <LogoThemed checkBackground />\r\n                        </Link>\r\n                    </Sidebar.Section>\r\n                </Sidebar.HideSlim>\r\n                { /* END SIDEBAR: Only for Desktop */ }\r\n\r\n                { /* START SIDEBAR: Only for Mobile */ }\r\n                <Sidebar.MobileFluid>\r\n                    <SidebarTopA data={this.state} {...this.props}/>\r\n                    \r\n                    <Sidebar.Section fluid cover>\r\n                        { /* SIDEBAR: Menu */ }\r\n                        <SidebarMiddleNav {...this.props} data={this.state}/>\r\n                    </Sidebar.Section>\r\n\r\n                </Sidebar.MobileFluid>\r\n                { /* END SIDEBAR: Only for Mobile */ }\r\n            </Sidebar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DefaultSidebar;","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\layout\\components\\DefaultNavbar.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Pages\\Login\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\layout\\components\\NavbarUser.js",["507","508"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport AuthenticationService from '../../services/AuthenticationService'\r\nimport {\r\n    NavItem,\r\n    NavLink\r\n} from './../../components';\r\nimport { constant } from 'lodash';\r\n\r\nclass NavbarUser extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        console.log('props >>>',props);\r\n        this.state = {\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    doLogout(){\r\n        AuthenticationService.deleteToken();\r\n        console.log('logged out >>>', AuthenticationService.getToken());\r\n        this.props.history.push({\r\n            pathname: \"/login\",\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <NavItem>\r\n                <NavLink tag={ Link } disabled={this.state.isLoading} onClick={() => this.doLogout()}>\r\n                    <i className=\"fa fa-power-off\"></i>\r\n                </NavLink>\r\n            </NavItem>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n// const NavbarUser = (props) => (\r\n//     <NavItem { ...props }>\r\n//         <NavLink tag={ Link } to=\"/login\">\r\n//             <i className=\"fa fa-power-off\"></i>\r\n//         </NavLink>\r\n//     </NavItem>\r\n// );\r\n// NavbarUser.propTypes = {\r\n//     className: PropTypes.string,\r\n//     style: PropTypes.object\r\n// };\r\n\r\nexport default NavbarUser;\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\layout\\components\\SidebarMiddleNav.js",["509","510","511"],"import React from 'react';\r\nimport MenuListingService from '../../services/MenuListingService'\r\nimport { SidebarMenu } from './../../components';\r\nimport AuthenticationService from '../../services/AuthenticationService';\r\nimport FlatList from 'flatlist-react';\r\n\r\nclass SidebarMiddleNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // const menuDict = {\r\n        //     DASHBOARD       : {icon: 'fa fa-fw fa-home', title: 'Dashboard', to: '/dashboard'},\r\n        //     MEDICAL_RECORD  : {icon: 'fa fa-fw fa-heartbeat', title: 'My Medical Record', to: '/mymedicalreport'},\r\n        //     APPOINTMENTS    : {icon: 'fa fa-fw fa-calendar', title: 'Appointments', to: '/appointments'},\r\n        //     PATIENTS        : {icon: 'fa fa-fw fa-users', title: 'Patients', to: '/patients'},\r\n        //     IMMUNIZATIONS   : {icon: 'fa fa-fw fa-plus-square', title: 'Immunizations', to: '/immunizations'},\r\n        //     PRACTITIONERS   : {icon: 'fa fa-fw fa-stethoscope', title: 'Practitioners', to: '/practitioners'},\r\n        //     PROVIDERS       : {icon: 'fa fa-fw fa-medkit', title: 'Providers', to: '/providers'},\r\n        //     VACCINES        : {icon: 'fa fa-fw fa-eyedropper', title: 'Vaccines', to: '/vaccines'},\r\n        // }\r\n        console.log('props in middleNav>>>', this.props);\r\n        // this.state = {\r\n        //     profileData: '',\r\n        //     menuItems: '',\r\n        //     menuList: '',\r\n        //     isLoading: false,\r\n        //     dashboard: false,\r\n        //     mymedicalreport: false,\r\n        //     appointments: false,\r\n        //     patients: false,\r\n        //     immunizations: false,\r\n        //     practitioners: false,\r\n        //     providers: false,\r\n        //     vaccines: false\r\n        // }\r\n    }\r\n    // getMenu = async () => {\r\n    //     try{\r\n    //         const response = await MenuListingService.getMenu();\r\n    //         if (response.status == true){\r\n    //             console.log('menu items >>>',response.data.menu);\r\n    //             this.setState({\r\n    //                 menuItems: response.data.menu,\r\n    //                 isLoading: false,\r\n\r\n    //             });\r\n    //             console.log('menuItems >>>', this.state.menuItems);\r\n    //             let menu;\r\n    //             var temp = this.state.menuItems;\r\n    //             menu = (temp).map(o => o.title);\r\n    //                 this.setState({\r\n    //                     menuList: menu\r\n    //             });\r\n\r\n    //         }\r\n    //     }\r\n    //     catch(e){\r\n    //         alert('catch');\r\n    //         console.log(e, e.data);\r\n    //     }\r\n    // }\r\n\r\n    // componentDidMount = async (props) => { \r\n    //     console.log('props2 >>>', props);\r\n    // }\r\n\r\n    // componentWillMount = async () => {\r\n    //     if (AuthenticationService.getUser()){\r\n    //         this.getMenu();\r\n    //     }\r\n    //     else{\r\n    //         this.props.history.push({\r\n    //             pathname: \"/login\",\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // renderMenu = (menuItem, idx) => {\r\n    //     console.log(this.state.menuItems);\r\n    //     return (\r\n    //         <SidebarMenu.Item\r\n    //                 key={idx}\r\n    //                 icon={<i className={menuItem.icon}></i>}\r\n    //                 title={menuItem.title}\r\n    //                 to={menuItem.url}\r\n    //         />\r\n    //     )\r\n    // }\r\n\r\n    dashboard() {\r\n        if ((this.props.data.menuList).includes('Dashboard')) {\r\n            return (<SidebarMenu.Item\r\n                icon={<i className=\"fa fa-fw fa-home\"></i>}\r\n                title=\"Dashboard\"\r\n                to='/dashboard'\r\n            />);\r\n        }\r\n        else {\r\n            return (<></>);\r\n        }\r\n    }\r\n    mymedicalreport() {\r\n        if ((this.props.data.menuList).includes('My Medical Record')) {\r\n            return (<SidebarMenu.Item\r\n                icon={<i className=\"fa fa-fw fa-heartbeat\"></i>}\r\n                title=\"My Medical Report\"\r\n                to='/mymedicalreport'\r\n            />);\r\n        }\r\n        else {\r\n            return (<></>);\r\n        }\r\n\r\n\r\n    }\r\n    appointments() {\r\n        if ((this.props.data.menuList).includes('Appointments')) {\r\n            return (<SidebarMenu.Item\r\n                icon={<i className=\"fa fa-fw fa-calendar\"></i>}\r\n                title=\"Appointments\"\r\n                to='/appointments'\r\n            />);\r\n        }\r\n        else {\r\n            return (<></>);\r\n        }\r\n    }\r\n    patients() {\r\n        if ((this.props.data.menuList).includes('Patients')) {\r\n            return (<SidebarMenu.Item\r\n                icon={<i className=\"fa fa-fw fa-users\"></i>}\r\n                title=\"Patients\"\r\n                to='/patients'\r\n            />);\r\n        }\r\n        else {\r\n            return (<></>);\r\n        }\r\n\r\n    }\r\n    immunizations() {\r\n        if ((this.props.data.menuList).includes('Immunizations')) {\r\n            return (<SidebarMenu.Item\r\n                icon={<i className=\"fa fa-fw fa-plus-square\"></i>}\r\n                title=\"Immunizations\"\r\n                to='/immunizations'\r\n            />);\r\n        }\r\n        else {\r\n            return (<></>);\r\n        }\r\n\r\n    }\r\n\r\n    practitioners() {\r\n        if ((this.props.data.menuList).includes('Practitioners')) {\r\n            return (<SidebarMenu.Item\r\n                icon={<i className=\"fa fa-fw fa-stethoscope\"></i>}\r\n                title=\"Practitioners\"\r\n                to='/practitioners'\r\n            />);\r\n        }\r\n        else {\r\n            return (<></>);\r\n        }\r\n\r\n    }\r\n    providers() {\r\n        if ((this.props.data.menuList).includes('Providers')) {\r\n            return (<SidebarMenu.Item\r\n                icon={<i className=\"fa fa-fw fa-medkit\"></i>}\r\n                title=\"Providers\"\r\n                to='/providers'\r\n            />);\r\n        }\r\n        else {\r\n            return (<></>);\r\n        }\r\n    }\r\n    vaccines() {\r\n        if ((this.props.data.menuList).includes('Vaccines')) {\r\n            return (<SidebarMenu.Item\r\n                icon={<i className=\"fa fa-fw fa-eyedropper\"></i>}\r\n                title=\"Vaccines\"\r\n                to='/vaccines'\r\n            />);\r\n        }\r\n        return (<></>);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n\r\n            <SidebarMenu>\r\n                {/* <FlatList\r\n                    list={this.state.test}\r\n                    renderItem={item => <li>{item.a}</li>}\r\n                /> */}\r\n\r\n                {this.dashboard()}\r\n                {this.mymedicalreport()}\r\n                {this.appointments()}\r\n                {this.patients()}\r\n                {this.immunizations()}\r\n                {this.practitioners()}\r\n                {this.providers()}\r\n                {this.vaccines()}\r\n\r\n                <SidebarMenu.Item />\r\n\r\n                { /* -------- Cards ---------*/}\r\n                {/* <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-clone\"></i>}\r\n                    title=\"Cards\"\r\n                >\r\n                    <SidebarMenu.Item title=\"Cards\" to='/cards/cards' exact />\r\n                    <SidebarMenu.Item title=\"Cards Headers\" to='/cards/cardsheaders' exact />\r\n                </SidebarMenu.Item> */}\r\n                { /* -------- Layouts ---------*/}\r\n                {/* <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-columns\"></i>}\r\n                    title=\"Layouts\"\r\n                >\r\n                    <SidebarMenu.Item title=\"Navbar\" to='/layouts/navbar' exact />\r\n                    <SidebarMenu.Item title=\"Sidebar\" to='/layouts/sidebar' exact />\r\n                    <SidebarMenu.Item title=\"Sidebar A\" to='/layouts/sidebar-a' exact />\r\n                    <SidebarMenu.Item title=\"Sidebar With Navbar\" to=\"/layouts/sidebar-with-navbar\" exact />\r\n                    <SidebarMenu.Item title=\"Drag &amp; Drop\" to='/layouts/dnd-layout' exact />\r\n                </SidebarMenu.Item> */}\r\n                { /* -------- Interface ---------*/}\r\n                {/* <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-toggle-on\"></i>}\r\n                    title=\"Interface\"\r\n                >\r\n                    <SidebarMenu.Item title=\"Colors\" to='/interface/colors' />\r\n                    <SidebarMenu.Item title=\"Typography\" to='/interface/typography' />\r\n                    <SidebarMenu.Item title=\"Buttons\" to='/interface/buttons' />\r\n                    <SidebarMenu.Item title=\"Paginations\" to='/interface/paginations' />\r\n                    <SidebarMenu.Item title=\"Images\" to='/interface/images' />\r\n                    <SidebarMenu.Item title=\"Avatars\" to='/interface/avatars' />\r\n                    <SidebarMenu.Item title=\"Progress Bars\" to='/interface/progress-bars' />\r\n                    <SidebarMenu.Item title=\"Badges &amp; Labels\" to='/interface/badges-and-labels' />\r\n                    <SidebarMenu.Item title=\"Media Objects\" to='/interface/media-objects' />\r\n                    <SidebarMenu.Item title=\"List Groups\" to='/interface/list-groups' />\r\n                    <SidebarMenu.Item title=\"Alerts\" to='/interface/alerts' />\r\n                    <SidebarMenu.Item title=\"Accordions\" to='/interface/accordions' />\r\n                    <SidebarMenu.Item title=\"Tabs Pills\" to='/interface/tabs-pills' />\r\n                    <SidebarMenu.Item title=\"Tooltips &amp; Popovers\" to='/interface/tooltips-and-popovers' />\r\n                    <SidebarMenu.Item title=\"Dropdowns\" to='/interface/dropdowns' />\r\n                    <SidebarMenu.Item title=\"Modals\" to='/interface/modals' />\r\n                    <SidebarMenu.Item title=\"Breadcrumbs\" to='/interface/breadcrumbs' />\r\n                    <SidebarMenu.Item title=\"Navbars\" to='/interface/navbars' />\r\n                    <SidebarMenu.Item title=\"Notifications\" to='/interface/notifications' />\r\n                    <SidebarMenu.Item title=\"Crop Image\" to='/interface/crop-image' />\r\n                    <SidebarMenu.Item title=\"Drag &amp; Drop Elements\" to='/interface/drag-and-drop-elements' />\r\n                    <SidebarMenu.Item title=\"Calendar\" to='/interface/calendar' />\r\n                </SidebarMenu.Item> */}\r\n                { /* -------- Graphs ---------*/}\r\n                {/* <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-pie-chart\"></i>}\r\n                    title=\"Graphs\"\r\n                >\r\n                    <SidebarMenu.Item title=\"ReCharts\" to='/graphs/re-charts' />\r\n                </SidebarMenu.Item> */}\r\n                { /* -------- Forms ---------*/}\r\n                {/* <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-check-square-o\"></i>}\r\n                    title=\"Forms\"\r\n                >\r\n                    <SidebarMenu.Item title=\"Forms\" to='/forms/forms' />\r\n                    <SidebarMenu.Item title=\"Forms Layouts\" to='/forms/forms-layouts' />\r\n                    <SidebarMenu.Item title=\"Input Groups\" to='/forms/input-groups' />\r\n                    <SidebarMenu.Item title=\"Wizard\" to='/forms/wizard' />\r\n                    <SidebarMenu.Item title=\"Text Mask\" to='/forms/text-mask' />\r\n                    <SidebarMenu.Item title=\"Typeahead\" to='/forms/typeahead' />\r\n                    <SidebarMenu.Item title=\"Toggles\" to='/forms/toggles' />\r\n                    <SidebarMenu.Item title=\"Editor\" to='/forms/editor' />\r\n                    <SidebarMenu.Item title=\"Date Picker\" to='/forms/date-picker' />\r\n                    <SidebarMenu.Item title=\"Dropzone\" to='/forms/dropzone' />\r\n                    <SidebarMenu.Item title=\"Sliders\" to='/forms/sliders' />\r\n                </SidebarMenu.Item> */}\r\n                { /* -------- Tables ---------*/}\r\n                {/* <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-trello\"></i>}\r\n                    title=\"Tables\"\r\n                >\r\n                    <SidebarMenu.Item title=\"Tables\" to='/tables/tables' />\r\n                    <SidebarMenu.Item title=\"Extended Tables\" to='/tables/extended-table' />\r\n                    <SidebarMenu.Item title=\"AgGrid\" to='/tables/ag-grid' />\r\n                </SidebarMenu.Item> */}\r\n                { /* -------- Apps ---------*/}\r\n                {/* <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-mouse-pointer\"></i>}\r\n                    title=\"Apps\"\r\n                >\r\n                    <SidebarMenu.Item title=\"Projects\">\r\n                        <SidebarMenu.Item title=\"Projects List\" to=\"/apps/projects/list\" />\r\n                        <SidebarMenu.Item title=\"Projects Grid\" to=\"/apps/projects/grid\" />\r\n                    </SidebarMenu.Item>\r\n                    <SidebarMenu.Item title=\"Tasks\">\r\n                        <SidebarMenu.Item title=\"Tasks List\" to=\"/apps/tasks/list\" />\r\n                        <SidebarMenu.Item title=\"Tasks Grid\" to=\"/apps/tasks/grid\" />\r\n                        <SidebarMenu.Item title=\"Tasks Kanban\" to=\"/apps/tasks-kanban\" />\r\n                        <SidebarMenu.Item title=\"Tasks Details\" to=\"/apps/task-details\" />\r\n                    </SidebarMenu.Item>\r\n                    <SidebarMenu.Item title=\"Files\">\r\n                        <SidebarMenu.Item title=\"Files List\" to=\"/apps/files/list\" />\r\n                        <SidebarMenu.Item title=\"Files Grid\" to=\"/apps/files/grid\" />\r\n                    </SidebarMenu.Item>\r\n                    <SidebarMenu.Item title=\"Search Results\">\r\n                        <SidebarMenu.Item title=\"Search Results\" to=\"/apps/search-results\" />\r\n                        <SidebarMenu.Item title=\"Images Results\" to=\"/apps/images-results\" />\r\n                        <SidebarMenu.Item title=\"Videos Results\" to=\"/apps/videos-results\" />\r\n                        <SidebarMenu.Item title=\"Users Results\" to=\"/apps/users-results\" />\r\n                    </SidebarMenu.Item>\r\n                    <SidebarMenu.Item title=\"Users\">\r\n                        <SidebarMenu.Item title=\"Users List\" to=\"/apps/users/list\" />\r\n                        <SidebarMenu.Item title=\"Users Grid\" to=\"/apps/users/grid\" />\r\n                    </SidebarMenu.Item>\r\n                    <SidebarMenu.Item title=\"Gallery\">\r\n                        <SidebarMenu.Item title=\"Gallery Grid\" to=\"/apps/gallery-grid\" />\r\n                        <SidebarMenu.Item title=\"Gallery Table\" to=\"/apps/gallery-table\" />\r\n                    </SidebarMenu.Item>\r\n                    <SidebarMenu.Item title=\"Mailbox\">\r\n                        <SidebarMenu.Item title=\"Inbox\" to=\"/apps/inbox\" />\r\n                        <SidebarMenu.Item title=\"New Email\" to=\"/apps/new-email\" />\r\n                        <SidebarMenu.Item title=\"Email Details\" to=\"/apps/email-details\" />\r\n                    </SidebarMenu.Item>\r\n                    <SidebarMenu.Item title=\"Profile\">\r\n                        <SidebarMenu.Item title=\"Profile Details\" to=\"/apps/profile-details\" />\r\n                        <SidebarMenu.Item title=\"Profile Edit\" to=\"/apps/profile-edit\" />\r\n                        <SidebarMenu.Item title=\"Account Edit\" to=\"/apps/account-edit\" />\r\n                        <SidebarMenu.Item title=\"Billing Edit\" to=\"/apps/billing-edit\" />\r\n                        <SidebarMenu.Item title=\"Settings Edit\" to=\"/apps/settings-edit\" />\r\n                        <SidebarMenu.Item title=\"Sessions Edit\" to=\"/apps/sessions-edit\" />\r\n                    </SidebarMenu.Item>\r\n                    <SidebarMenu.Item title=\"Clients\" to=\"/apps/clients\" exact />\r\n                    <SidebarMenu.Item title=\"Chat\" to=\"/apps/chat\" exact />\r\n                </SidebarMenu.Item> */}\r\n                { /* -------- Pages ---------*/}\r\n                {/* <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-copy\"></i>}\r\n                    title=\"Pages\"\r\n                >\r\n                    <SidebarMenu.Item title=\"Register\" to=\"/pages/register\" />\r\n                    <SidebarMenu.Item title=\"Login\" to=\"/pages/login\" />\r\n                    <SidebarMenu.Item title=\"Forgot Password\" to=\"/pages/forgot-password\" />\r\n                    <SidebarMenu.Item title=\"Lock Screen\" to=\"/pages/lock-screen\" />\r\n                    <SidebarMenu.Item title=\"Error 404\" to=\"/pages/error-404\" />\r\n                    <SidebarMenu.Item title=\"Confirmation\" to=\"/pages/confirmation\" />\r\n                    <SidebarMenu.Item title=\"Success\" to=\"/pages/success\" />\r\n                    <SidebarMenu.Item title=\"Danger\" to=\"/pages/danger\" />\r\n                    <SidebarMenu.Item title=\"Coming Soon\" to=\"/pages/coming-soon\" />\r\n                    <SidebarMenu.Item title=\"Timeline\" to=\"/pages/timeline\" />\r\n                </SidebarMenu.Item>\r\n                <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-star-o\"></i>}\r\n                    title=\"Icons\"\r\n                    to='/icons'\r\n                />\r\n                <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-bookmark-o\"></i>}\r\n                    title=\"Docs\"\r\n                    href='https://webkom.gitbook.io/spin/v/airframe/airframe-react/documentation-react'\r\n                /> */}\r\n                { /* -------- Versions ---------*/}\r\n                {/* <SidebarMenu.Item\r\n                    icon={<i className=\"fa fa-fw fa-folder-open-o\"></i>}\r\n                    title=\"Versions\"\r\n                >\r\n                    <SidebarMenu.Item title=\"NextJS (React)\" href='http://airframe.nextjs.webkom.co/' />\r\n                    <SidebarMenu.Item title=\"React\" href='http://dashboards.webkom.co/react/airframe' />\r\n                    <SidebarMenu.Item title=\"jQuery\" to=\"http://dashboards.webkom.co/jquery/airframe/\" />\r\n                    <SidebarMenu.Item title=\"Vue\" to=\"http://dashboards.webkom.co/vue/airframe\" />\r\n                    <SidebarMenu.Item title=\"Angular\" to=\"http://dashboards.webkom.co/angular/airframe\" />\r\n                    <SidebarMenu.Item title=\".NET MVC\" to=\"http://dashboards.webkom.co/net-mvc/airframe\" />\r\n                </SidebarMenu.Item> */}\r\n            </SidebarMenu >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SidebarMiddleNav;\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\Sidebar\\SidebarBottomA.js",["512"],"import React from 'react';\r\n\r\nimport {\r\n    Button,\r\n    Sidebar,\r\n    UncontrolledPopover,\r\n    PopoverBody\r\n} from './../../../components';\r\n\r\nimport { FooterAuth } from '../Pages/FooterAuth';\r\nimport { FooterText } from '../FooterText';\r\nimport { VersionSelector } from '../VersionSelector';\r\n\r\nconst SidebarBottomA = () => (\r\n    <React.Fragment>\r\n        { /* START Desktop */ }\r\n        <Sidebar.HideSlim>\r\n            <span>Sidebar Bottom A</span>\r\n            {/* <Sidebar.Section className=\"pb-0\">\r\n                <VersionSelector sidebar dashboard=\"Airframe\" />\r\n            </Sidebar.Section>\r\n            <Sidebar.Section>\r\n                <FooterAuth className=\"text-muted\" />\r\n            </Sidebar.Section> */}\r\n        </Sidebar.HideSlim>\r\n        { /* END Desktop */ }\r\n\r\n        { /* START Slim Only */ }\r\n        <Sidebar.ShowSlim>\r\n            <Sidebar.Section className=\"text-center\">\r\n                { /* Slim Version Selector */ }\r\n                <VersionSelector\r\n                    dashboard=\"Airframe\"\r\n                    sidebar\r\n                    compact\r\n                    render={() => (\r\n                        <i className=\"fa fa-fw fa-toggle-on\"></i>\r\n                    )}\r\n                />\r\n\r\n                { /* Footer Text as Tooltip */ }\r\n                <Button\r\n                    id=\"UncontrolledSidebarPopoverFooter\"\r\n                    color=\"link\"\r\n                    className=\"sidebar__link p-0 mt-3\"\r\n                >\r\n                    <i className=\"fa fa-fw fa-question-circle-o\"></i>\r\n                </Button>\r\n                <UncontrolledPopover placement=\"left-end\" target=\"UncontrolledSidebarPopoverFooter\">\r\n                    <PopoverBody>\r\n                        <FooterText />\r\n                    </PopoverBody>\r\n                </UncontrolledPopover>\r\n            </Sidebar.Section>\r\n        </Sidebar.ShowSlim>\r\n        { /* END Slim Only */ }\r\n    </React.Fragment>\r\n)\r\n\r\nexport { SidebarBottomA };\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\LogoThemed\\LogoThemed.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\Sidebar\\SidebarTopA.js",["513","514","515","516"],"import React from 'react';\r\nimport faker from 'faker/locale/en_US';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { \r\n    Sidebar,\r\n    UncontrolledButtonDropdown,\r\n    Avatar,\r\n    AvatarAddOn,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n} from './../../../components';\r\nimport { randomAvatar } from './../../../utilities';\r\n\r\nconst avatarImg = randomAvatar();\r\n\r\nclass SidebarTopA extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        console.log('props in sideA >>>', props);\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                { /* START: Sidebar Default */ }\r\n                <Sidebar.HideSlim>\r\n                    <Sidebar.Section className=\"pt-0\">\r\n                        <Link to=\"/\" className=\"d-block\">\r\n                            <Sidebar.HideSlim>\r\n                                <Avatar.Image\r\n                                    size=\"lg\"\r\n                                    src={require('../../../images/avatars/1.jpg')}\r\n                                    addOns={[\r\n                                        // <AvatarAddOn.Icon \r\n                                        //     className=\"fa fa-circle\"\r\n                                        //     color=\"white\"\r\n                                        //     key=\"avatar-icon-bg\"\r\n                                        // />,\r\n                                        <AvatarAddOn.Icon \r\n                                            className=\"fa fa-circle\"\r\n                                            color=\"success\"\r\n                                            key=\"avatar-icon-fg\"\r\n                                        />\r\n                                    ]}\r\n                                />\r\n                            </Sidebar.HideSlim>\r\n                        </Link>\r\n                        \r\n                        <UncontrolledButtonDropdown>\r\n                            <DropdownToggle color=\"link\" className=\"pl-0 pb-0 btn-profile sidebar__link\">\r\n                                {this.props.data.profileData.name}\r\n                                {/* <i className=\"fa fa-angle-down ml-2\"></i> */}\r\n                            </DropdownToggle>\r\n                        </UncontrolledButtonDropdown>\r\n                        <div className=\"small sidebar__link--muted\">\r\n                            { this.props.data.profileData.designation}\r\n                        </div>\r\n                    </Sidebar.Section>\r\n                </Sidebar.HideSlim>\r\n                { /* END: Sidebar Default */ }\r\n\r\n                { /* START: Sidebar Slim */ }\r\n                <Sidebar.ShowSlim>\r\n                    <Sidebar.Section>\r\n                        <Avatar.Image\r\n                            size=\"sm\"\r\n                            src={ require('../../../images/avatars/1.jpg') }\r\n                            addOns={[\r\n                                <AvatarAddOn.Icon \r\n                                    className=\"fa fa-circle\"\r\n                                    color=\"white\"\r\n                                    key=\"avatar-icon-bg\"\r\n                                />,\r\n                                <AvatarAddOn.Icon \r\n                                    className=\"fa fa-circle\"\r\n                                    color=\"success\"\r\n                                    key=\"avatar-icon-fg\"\r\n                                />\r\n                            ]}\r\n                        />\r\n                    </Sidebar.Section>\r\n                </Sidebar.ShowSlim>\r\n                { /* END: Sidebar Slim */ }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SidebarTopA;\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Appointments.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\DashboardGeneral.js",["517","518"],"import React from 'react';\r\nimport Config from '../../config/Config'\r\nimport AuthenticationService from '../../services/AuthenticationService'\r\nimport { Container } from './../../components';\r\nimport { HeaderMain } from './../components/HeaderMain';\r\nclass DashboardGeneral extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentDidMount(){\r\n        if (AuthenticationService.getUser()){\r\n            console.log('succeed');\r\n        }\r\n        else{\r\n            this.props.history.push({\r\n                pathname: \"/login\",\r\n            })\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <Container>\r\n                <HeaderMain title=\"General Dashboard\" className=\"mb-5 mt-4\" />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DashboardGeneral;","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Immunizations.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\MedicalReport.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Patients.js",["519"],"import React from 'react';\r\nimport PatientsTable from \"./../Tables/ExtendedTable/components/PatientsTable\";\r\nimport { Container } from \"./../../components\";\r\nimport { HeaderMain } from \"./../components/HeaderMain\";\r\n\r\n\r\nclass Patients extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <Container>\r\n                <HeaderMain title=\"Patients\" className=\"mb-5 mt-4\" />\r\n                <PatientsTable {...this.props} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Patients;","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Practitioners.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Providers.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Content\\Vaccines.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Theme\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Nav\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Navbar\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarTrigger\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\ExtendedDropdown\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\IconWithBadge\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\InputGroupAddon\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarMenu\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledPopover\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\CustomInput\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\EmptyLayout\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Pages\\Login\\Login.js",["520","521","522","523","524"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport AuthenticationService from '../../../services/AuthenticationService'\r\nimport Config from '../../../config/Config'\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    FormText,\r\n    Input,\r\n    InputGroup,\r\n    CustomInput,\r\n    Button,\r\n    Label,\r\n    EmptyLayout,\r\n    ThemeConsumer,\r\n    InputGroupAddon,\r\n} from './../../../components';\r\n\r\nimport { HeaderAuth } from \"../../components/Pages/HeaderAuth\";\r\nimport { FooterAuth } from \"../../components/Pages/FooterAuth\";\r\n\r\nclass Login extends React.Component {\r\n    \r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            emailId: '',\r\n            password: '',\r\n            emailId_errorMessage: '',\r\n            password_errorMessage: '',\r\n            authenticationMessage: '',\r\n            hidePassword: true,\r\n            color: \"black\",\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    async Authenticate() {\r\n        this.setState(({\r\n            isLoading: true,\r\n            authenticationMessage: '',\r\n        }))\r\n        if (this.state.emailId == ''){\r\n            this.setState({\r\n                emailId_errorMessage: \"Enter email ID\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else{\r\n            if (validator.isEmail(this.state.emailId)){\r\n                this.setState({\r\n                    emailId_errorMessage: \"\"\r\n                });\r\n            }\r\n            else{\r\n                this.setState({\r\n                    emailId_errorMessage: \"Enter a valid email ID\",\r\n                    isLoading: false\r\n                })\r\n                return \r\n            }\r\n            \r\n        }\r\n        if (this.state.password == ''){\r\n            this.setState({\r\n                password_errorMessage: \"Enter password\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else{\r\n            this.setState({\r\n                password_errorMessage: \"\"\r\n            });\r\n            const postData = {\r\n                email: this.state.emailId,\r\n                password: this.state.password\r\n            }\r\n            try{\r\n                const response = await AuthenticationService.Login(postData);\r\n                if (response.status == true) {\r\n                    console.log(response.data);\r\n                    this.setState({\r\n                        color: \"success\",\r\n                        authenticationMessage: \"Login successful\",\r\n                        isLoading: false,\r\n                    });\r\n\r\n                    AuthenticationService.setToken(response.data.access_token);\r\n                    // Config.access_token = response.data.access_token;\r\n                    // Config.role_id = 100;\r\n                    \r\n                    this.props.history.replace({\r\n                        pathname: \"/dashboard\",\r\n                        state: {\r\n                            id: 7,\r\n                            color: 'green'\r\n                        }\r\n                    })  \r\n                    \r\n                    \r\n                }\r\n                else{\r\n                    this.setState({\r\n                        color: \"danger\",\r\n                        isLoading: false,\r\n                        authenticationMessage: response.data.data.error\r\n                    });\r\n                }\r\n            }\r\n            catch (e){\r\n                console.log(e, e.data)      \r\n            }\r\n        }\r\n\r\n    }\r\n    onChangeEmail(value){\r\n        this.setState({\r\n            emailId: value\r\n        });\r\n    }\r\n\r\n    onChangePassword(value){\r\n        this.setState({\r\n            password: value\r\n        })\r\n    }\r\n\r\n    secureEntry(){\r\n        this.setState({\r\n            hidePassword: !this.state.hidePassword,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <EmptyLayout>\r\n                <EmptyLayout.Section center>\r\n                    { /* START Header */}\r\n                    <HeaderAuth \r\n                        title=\"Sign In\"\r\n                    />\r\n                    { /* END Header */}\r\n                    { /* START Form */}\r\n                    <Form className=\"mb-3\">\r\n                        <FormGroup>\r\n                            <Label for=\"emailAdress\">\r\n                                Email Address\r\n                            </Label>\r\n                            <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <i className=\"fa fa-fw fa-envelope\"></i>\r\n                                    </InputGroupAddon>\r\n                                    <Input \r\n                                        type=\"email\"\r\n                                        name=\"emailId\" \r\n                                        id=\"emailId\"\r\n                                        placeholder=\"user@example.com\" \r\n                                        className=\"bg-white\"\r\n                                        value={this.state.emailId}\r\n                                        onChange={e => this.onChangeEmail(e.target.value)}\r\n                                        \r\n                                    />\r\n                            </InputGroup>\r\n                            \r\n                            <FormText color=\"danger\">\r\n                                {this.state.emailId_errorMessage}\r\n                            </FormText>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">\r\n                                Password\r\n                            </Label>\r\n                            <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <i className=\"fa fa-fw fa-lock\"></i>\r\n                                    </InputGroupAddon>\r\n                                    <Input \r\n                                        type={(this.state.hidePassword) ? ('password') : ('text')}\r\n                                        name=\"password\" \r\n                                        id=\"password\"\r\n                                        placeholder=\"Password\" \r\n                                        className=\"bg-white\"\r\n                                        value={this.state.password}\r\n                                        onChange={e => this.onChangePassword(e.target.value)}\r\n                                    />\r\n                                    {(this.state.hidePassword) ?\r\n                                        <InputGroupAddon addonType=\"append\" onClick={() => this.secureEntry()}>\r\n                                            <i className=\"fa fa-fw fa-eye-slash\"></i>\r\n                                        </InputGroupAddon>  \r\n                                        :\r\n                                        <InputGroupAddon addonType=\"append\" onClick={() => this.secureEntry()}>\r\n                                            <i className=\"fa fa-fw fa-eye\"></i>\r\n                                        </InputGroupAddon>  \r\n                                    }\r\n\r\n                            </InputGroup>\r\n                            \r\n                            <FormText color=\"danger\">\r\n                                {this.state.password_errorMessage}\r\n                            </FormText>\r\n                        </FormGroup>\r\n                        <ThemeConsumer>\r\n                        {\r\n                            ({ color }) => (\r\n                                <Button \r\n                                    color={ color } \r\n                                    block \r\n                                    tag={ Link } \r\n                                    onClick={() => this.Authenticate()}\r\n                                    disabled={this.state.isLoading}\r\n                                >\r\n                                    Sign In\r\n                                </Button>\r\n                            )\r\n                        }\r\n                        </ThemeConsumer>\r\n\r\n                        <FormText color={this.state.color}>\r\n                            {this.state.authenticationMessage}\r\n                        </FormText>\r\n                        \r\n                    </Form>\r\n                    { /* END Form */}\r\n                    { /* START Bottom Links */}\r\n                    {/* <div className=\"d-flex mb-5\">\r\n                        <Link to=\"/pages/forgotpassword\" className=\"text-decoration-none\">\r\n                            Forgot Password\r\n                        </Link>\r\n                    </div> */}\r\n                    { /* END Bottom Links */}\r\n                    { /* START Footer */}\r\n                    <FooterAuth />\r\n                    { /* END Footer */}\r\n                </EmptyLayout.Section>\r\n            </EmptyLayout>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Login;\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\FooterText.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\utilities.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\VersionSelector.js",["525"],"import React from 'react';\r\nimport fetch from 'node-fetch';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    UncontrolledButtonDropdown,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    DropdownToggle\r\n} from './../../components';\r\n\r\nconst SERVICE_URL = \"http://dashboards.webkom.co:8000\";\r\n\r\nexport class VersionSelector extends React.Component {\r\n    static propTypes = {\r\n        dashboard: PropTypes.string,\r\n        down: PropTypes.bool,\r\n        compact: PropTypes.bool,\r\n        render: PropTypes.func,\r\n        className: PropTypes.string,\r\n        sidebar: PropTypes.bool\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            versions: [],\r\n            isError: false,\r\n            render: null\r\n        };\r\n    }\r\n\r\n    async fetchVersions() {\r\n        const { dashboard } = this.props;\r\n        let versions;\r\n        try {\r\n            versions = await fetch(`${SERVICE_URL}/dashboards/versions`)\r\n                .then(response => response.json());\r\n        } catch(exc) {\r\n            this.setState({ isError: true })\r\n        }\r\n        const targetVersions = _.filter(versions, { dashboardName: dashboard });\r\n        \r\n        this.setState({ versions: targetVersions });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchVersions();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.dashboard !== this.props.dashboard) {\r\n            this.fetchVersions();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { down, render, className, sidebar } = this.props;\r\n        const { versions } = this.state;\r\n        const currentVersion = _.find(versions, { label: \"React\" });\r\n\r\n        return (\r\n            <UncontrolledButtonDropdown direction={ down ? \"down\" : \"up\" } className={ className }>\r\n                <DropdownToggle\r\n                    disabled={ _.isEmpty(versions) }\r\n                    tag=\"a\"\r\n                    href=\"javascript:;\"\r\n                    className={classNames(\r\n                        'btn-switch-version',\r\n                        {\r\n                            'sidebar__link': sidebar,\r\n                        }\r\n                    )}\r\n                >\r\n                    {\r\n                        currentVersion ? (\r\n                            render ? render(currentVersion) : (\r\n                                <React.Fragment>\r\n                                    React {currentVersion.version} <i className={`fa ${down ? \"fa-angle-down\" : \"fa-angle-up\"} ml-2`}></i>\r\n                                    <br />\r\n                                    <span className={ classNames('small', { 'sidebar__link--muted': sidebar }) }>\r\n                                        { moment(currentVersion.date).format(\"ddd, MMM DD, YYYY h:mm:ss A\") }\r\n                                    </span>\r\n                                </React.Fragment>\r\n                            )\r\n                        ) : (\r\n                            <span>Loading...</span>\r\n                        )\r\n                    }\r\n                </DropdownToggle>\r\n                {\r\n                    (!_.isEmpty(versions)) && (\r\n                        <DropdownMenu>\r\n                            <DropdownItem header>\r\n                                Bootstrap 4 Versions:\r\n                            </DropdownItem>\r\n                            {\r\n                                _.map(versions, (version, index) => (\r\n                                    <DropdownItem\r\n                                        key={ index }\r\n                                        href={ version.demoUrl }\r\n                                        className=\"d-flex\"\r\n                                        active={ version === currentVersion }\r\n                                    >\r\n                                        <span>\r\n                                            { version.label } { version.version }\r\n                                            <br />\r\n                                            <span className=\"small\">\r\n                                                { moment(version.date).format(\"ddd, MMM DD, YYYY h:mm:ss A\") }\r\n                                            </span>\r\n                                        </span>\r\n                                        {\r\n                                            (version === currentVersion) && (\r\n                                                <i className=\"fa fa-fw fa-check text-success ml-auto align-self-center pl-3\" />\r\n                                            )\r\n                                        }\r\n                                    </DropdownItem>\r\n                                ))\r\n                            }\r\n                        </DropdownMenu>\r\n                    )\r\n                }\r\n            </UncontrolledButtonDropdown>\r\n        );\r\n    }\r\n}","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\Pages\\FooterAuth.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Theme\\ThemeClass.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Theme\\ThemeProvider.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Theme\\ThemeContext.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Nav\\nav.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Navbar\\navbar.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\Sidebar.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarSection.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarClose.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarMobileFluid.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarShowSlim.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarHideSlim.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarTrigger\\SidebarTrigger.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\Avatar.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\AvatarFont.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\AvatarImage.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\AvatarAddonBadge.js",["526"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { Badge } from 'reactstrap';\r\n\r\nconst AvatarAddonBadge = (props) => {\r\n    const { children, ...badgeProps } = props;\r\n\r\n    return (\r\n        <Badge {...badgeProps}>\r\n            { children }\r\n        </Badge>\r\n    );\r\n};\r\nAvatarAddonBadge.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string\r\n};\r\nAvatarAddonBadge.addOnId = \"avatar--badge\";\r\n\r\nexport { AvatarAddonBadge };","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Avatar\\AvatarAddonIcon.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\ExtendedDropdown\\ExtendedDropdown.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\ExtendedDropdown\\ExtendedDropdownSection.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\ExtendedDropdown\\ExtendedDropdownLink.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\IconWithBadge\\IconWithBadge.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\InputGroupAddon\\InputGroupAddon.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledPopover\\UncontrolledPopover.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\CustomInput\\CustomInput.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\EmptyLayout\\EmptyLayout.js",["527"],"import React from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {\r\n    withPageConfig\r\n} from './../../components/Layout';\r\n\r\nclass EmptyLayout extends React.Component {\r\n    static propTypes = {\r\n        pageConfig: PropTypes.object.isRequired,\r\n        children: PropTypes.node.isRequired,\r\n        className: PropTypes.string\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.pageConfig.setElementsVisibility({\r\n            navbarHidden: true,\r\n            sidebarHidden: true,\r\n            footerHidden: true \r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.pageConfig.setElementsVisibility({\r\n            navbarHidden: false,\r\n            sidebarHidden: false,\r\n            footerHidden: false \r\n        });\r\n    }\r\n\r\n    render() {\r\n        const emptyLayoutClass = classNames('fullscreen', this.props.className);\r\n\r\n        return (\r\n            <div className={ emptyLayoutClass }>\r\n                { this.props.children }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst PageConfigEmptyLayout = withPageConfig(EmptyLayout);\r\n\r\nexport {\r\n    PageConfigEmptyLayout as EmptyLayout\r\n};\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\EmptyLayout\\EmptyLayoutSection.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarMenu\\SidebarMenu.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarMenu\\SidebarMenuItem.js",["528","529"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport uuid from 'uuid/v4';\r\n\r\nimport { MenuContext } from './MenuContext';\r\n\r\n/**\r\n * Renders a collapse trigger or a ReactRouter Link \r\n */\r\nconst SidebarMenuItemLink = (props) => (\r\n    (props.to || props.href) ? (\r\n        props.to ? (\r\n            <Link to={ props.to } className={`${props.classBase}__entry__link`}>\r\n                { props.children }\r\n            </Link>\r\n        ) : (\r\n            <a\r\n                href={ props.href }\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className={`${props.classBase}__entry__link`}\r\n            >\r\n                { props.children }\r\n            </a>\r\n        )\r\n        \r\n    ) : (\r\n        <a\r\n            href=\"javascript:;\"\r\n            className={`${props.classBase}__entry__link`}\r\n            onClick={ () => props.onToggle() }\r\n        >\r\n            { props.children }\r\n        </a>\r\n    )\r\n)\r\nSidebarMenuItemLink.propTypes = {\r\n    to: PropTypes.string,\r\n    href: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    onToggle: PropTypes.func,\r\n    children: PropTypes.node,\r\n    classBase: PropTypes.string\r\n}\r\n\r\n/**\r\n * The main menu entry component\r\n */\r\nexport class SidebarMenuItem extends React.Component {\r\n    static propTypes = {\r\n        // MenuContext props\r\n        addEntry: PropTypes.func,\r\n        updateEntry: PropTypes.func,\r\n        removeEntry: PropTypes.func,\r\n        entries: PropTypes.object,\r\n        // Provided props\r\n        parentId: PropTypes.string,\r\n        children: PropTypes.node,\r\n        isSubNode: PropTypes.bool,\r\n        currentUrl: PropTypes.string,\r\n        slim: PropTypes.bool,\r\n        // User props\r\n        icon: PropTypes.node,\r\n        title: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.node\r\n        ]),\r\n        to: PropTypes.string,\r\n        href: PropTypes.string,\r\n        exact: PropTypes.bool,\r\n        noCaret: PropTypes.bool,\r\n    }\r\n\r\n    static defaultProps = {\r\n        exact: true\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.id = uuid();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const entry = {\r\n            id: this.id,\r\n            parentId: this.props.parentId,\r\n            exact: !!this.props.exact\r\n        };\r\n        \r\n        if (this.props.to) {\r\n            entry.url = this.props.to;\r\n        }\r\n\r\n        this.props.addEntry(entry);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.removeEntry(this.id);\r\n    }\r\n\r\n    getEntry() {\r\n        return this.props.entries[this.id];\r\n    }\r\n\r\n    toggleNode() {\r\n        const entry = this.getEntry();\r\n\r\n        this.props.updateEntry(this.id, { open: !entry.open });\r\n    }\r\n\r\n    render() {\r\n        const entry = this.getEntry();\r\n        const classBase = this.props.isSubNode ? \"sidebar-submenu\" : \"sidebar-menu\";\r\n        const itemClass = classNames(`${classBase}__entry`, {\r\n            [`${classBase}__entry--nested`]: !!this.props.children,\r\n            'open': entry && entry.open,\r\n            'active': entry && entry.active\r\n        });\r\n\r\n        return (\r\n            <li\r\n                className={classNames(itemClass, {\r\n                    'sidebar-menu__entry--no-caret': this.props.noCaret,\r\n                })}\r\n            >\r\n                <SidebarMenuItemLink\r\n                    to={ this.props.to || null }\r\n                    href={ this.props.href || null }\r\n                    onToggle={ this.toggleNode.bind(this) }\r\n                    classBase={ classBase }\r\n                >\r\n                    {\r\n                        this.props.icon && React.cloneElement(this.props.icon, {\r\n                            className: classNames(\r\n                                this.props.icon.props.className,\r\n                                `${classBase}__entry__icon`\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        typeof this.props.title === 'string' ?\r\n                            <span>{ this.props.title }</span> :\r\n                            this.props.title\r\n                    }\r\n                </SidebarMenuItemLink>\r\n                {\r\n                    this.props.children && (\r\n                        <ul className=\"sidebar-submenu\">\r\n                        {\r\n                            React.Children.map(this.props.children, (child) => (\r\n                                <MenuContext.Consumer>\r\n                                {\r\n                                    (ctx) => React.cloneElement(child, {\r\n                                        isSubNode: true,\r\n                                        parentId: this.id,\r\n                                        currentUrl: this.props.currentUrl,\r\n                                        slim: this.props.slim,\r\n                                        ...ctx\r\n                                    })\r\n                                }\r\n                                </MenuContext.Consumer>\r\n                            ))\r\n                        }\r\n                        </ul>\r\n                    )\r\n                }\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Theme\\ThemeSelector.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\Pages\\HeaderAuth.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Sidebar\\SidebarContent.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\SidebarMenu\\MenuContext.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\config.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\OuterClick\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\common.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\OuterClick\\OuterClick.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\AuthenticationService.js",["530"],"import axios from 'axios';\r\nimport paths from '../config/Endpoint';\r\n\r\nconst getUser = () => {\r\n    return getCredentials();\r\n}\r\n\r\n\r\nconst doLogin = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.post(paths.login, data, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\nconst setCredentials = (data) => {\r\n    localStorage.setItem('access_token', data);\r\n}\r\n\r\nconst getCredentials = () => {\r\n    var access_token;\r\n    access_token = localStorage.getItem('access_token');\r\n    console.log('token >>>', access_token);\r\n    return access_token\r\n}\r\n\r\nconst deleteCredentials = () => {\r\n    localStorage.clear()\r\n}\r\n\r\n\r\nconst AuthenticationService = {\r\n    Login: doLogin,\r\n    setToken: setCredentials,\r\n    getToken: getCredentials,\r\n    deleteToken: deleteCredentials,\r\n    getUser: getUser,\r\n}\r\nexport default AuthenticationService;","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\config\\Endpoint.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\config\\Config.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\MenuListingService.js",["531"],"import axios from 'axios';\r\nimport paths from '../config/Endpoint';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\n\r\nconst getMenu = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.get(paths.menu, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\n\r\nconst MenuListingService = {\r\n    getMenu: getMenu,\r\n}\r\nexport default MenuListingService;","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\components\\HeaderMain.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\ProvidersTable.js",["532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548"],"import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport filterFactory, {\r\n    Comparator,\r\n    dateFilter,\r\n} from \"react-bootstrap-table2-filter\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport validator from 'validator';\r\n\r\nimport {\r\n  // Badge,\r\n  Button,\r\n  // CustomInput,\r\n  // StarRating,\r\n  ButtonGroup,\r\n  UncontrolledModal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Col,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  FormText,\r\n  ModalFooter,\r\n  Label,\r\n  Form, \r\n  FormGroup, \r\n} from \"../../../../components\";\r\nimport { CustomExportCSV } from \"./CustomExportButton\";\r\nimport { CustomSearch } from \"./CustomSearch\";\r\nimport { CustomPaginationPanel } from \"./CustomPaginationPanel\";\r\nimport { CustomSizePerPageButton } from \"./CustomSizePerPageButton\";\r\nimport { CustomPaginationTotal } from \"./CustomPaginationTotal\";\r\nimport {\r\n    buildCustomTextFilter\r\n} from \"../filters\";\r\n\r\nimport ProvidersService from './../../../../services/ProvidersService';\r\nimport AuthenticationService from './../../../../services/AuthenticationService';\r\n\r\n\r\nconst sortCaret = (order) => {\r\n    if (!order) return <i className=\"fa fa-fw fa-sort text-muted\"></i>;\r\n    if (order) return <i className={`fa fa-fw text-muted fa-sort-${order}`}></i>;\r\n};\r\n\r\nexport default class ProviderTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            providersList: [],\r\n            name: '',\r\n            emailId: '',\r\n            password: '',\r\n            name_errorMessage: '',\r\n            email: '',\r\n            password: '',\r\n            emailId_errorMessage: '',\r\n            password_errorMessage: '',\r\n            authenticationMessage: '',\r\n            hidePassword: true,\r\n            color: \"black\",\r\n            isLoading: false,\r\n            name: '',\r\n            nextPage: '',\r\n            previousPage: '',\r\n            searchValue: null\r\n        };\r\n\r\n        this.headerCheckboxRef = React.createRef();\r\n    }\r\n\r\n    getList = async (page=null, search=null) => {\r\n        try{\r\n            const paramData = {\r\n                page: page,\r\n                search: search\r\n            }\r\n            const response = await ProvidersService.getList(paramData);\r\n            if (response.status == true){\r\n                this.setState({\r\n                    providersList: response.data.result,\r\n                    nextPage: response.data.next_page,\r\n                    previousPage: response.data.previous_page,            \r\n                });\r\n            }\r\n            \r\n        }\r\n        catch (e) {\r\n            console.log('error >>>', e);\r\n            console.log(e, e.data);\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => { \r\n        if (AuthenticationService.getUser()){\r\n            this.getList();           \r\n        }\r\n        else {\r\n            this.props.history.push({\r\n                pathname: \"/login\",\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handlePractitionersOnClick(cell, row) {\r\n        console.log(\"Practitioners Button clicked, rowId:\", row.provider_id);\r\n        // console.log(this.props);\r\n        this.props.history.push({ pathname: \"/practitioners\", provider_id: row.provider_id });\r\n        // return <Redirect to='/practitioners' />\r\n        // <Link to='/practitioners' />\r\n    }\r\n\r\n    handleAppointmentsOnClick(cell, row) {\r\n        console.log(\"Appointments button clicked, rowId:\", row.provider_id);\r\n        this.props.history.push({\r\n            pathname: \"/appointments\",\r\n            provider_id: row.provider_id\r\n        });\r\n    }\r\n\r\n    handleArchiveOnClick(cell, row) {\r\n        console.log(\"Archive button clicked, active flag:\", row.active_fl);\r\n    }\r\n\r\n    actionColButton = (cell, row) => {\r\n        return (\r\n            <ButtonGroup>\r\n                <Button\r\n                    size=\"sm\"\r\n                    outline\r\n                    color=\"primary\"\r\n                    onClick={() => this.handlePractitionersOnClick(cell, row)}\r\n                >\r\n                    Practitioners\r\n        </Button>\r\n                <Button\r\n                    size=\"sm\"\r\n                    outline\r\n                    color=\"purple\"\r\n                    onClick={() => this.handleAppointmentsOnClick(cell, row)}\r\n                >\r\n                    Appointments\r\n        </Button>\r\n                <Button\r\n                    size=\"sm\"\r\n                    outline\r\n                    color=\"danger\"\r\n                    onClick={() => this.handleArchiveOnClick(cell, row)}\r\n                >\r\n                    Archive\r\n        </Button>\r\n            </ButtonGroup>\r\n        );\r\n    };\r\n\r\n    secureEntry() {\r\n        this.setState({\r\n            hidePassword: !this.state.hidePassword,\r\n        });\r\n    }\r\n\r\n    onChangeName(value) {\r\n        this.setState({\r\n            name: value\r\n        })\r\n    }\r\n\r\n    onChangeEmail(value) {\r\n        this.setState({\r\n            emailId: value\r\n        });\r\n    }\r\n\r\n    onChangePassword(value) {\r\n        this.setState({\r\n            password: value\r\n        })\r\n    }\r\n\r\n    async CreateProvider() {\r\n        this.setState({\r\n            isLoading: true,\r\n            authenticationMessage: '',\r\n        })\r\n        if (this.state.name == '') {\r\n            this.setState({\r\n                name_errorMessage: \"Enter Name\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else {\r\n            this.setState({\r\n                name_errorMessage: \"\"\r\n            });\r\n        }\r\n\r\n        if (this.state.emailId == '') {\r\n            this.setState({\r\n                emailId_errorMessage: \"Enter email ID\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else {\r\n            if (validator.isEmail(this.state.emailId)) {\r\n                this.setState({\r\n                    emailId_errorMessage: \"\"\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    emailId_errorMessage: \"Enter a valid email ID\",\r\n                    isLoading: false\r\n                })\r\n                return\r\n            }\r\n\r\n        }\r\n        if (this.state.password == '') {\r\n            this.setState({\r\n                password_errorMessage: \"Enter password\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else {\r\n            this.setState({\r\n                password_errorMessage: \"\"\r\n            });\r\n            const postData = {\r\n                name: this.state.name,\r\n                email: this.state.emailId,\r\n                password: this.state.password\r\n            }\r\n            try {\r\n                console.log('postData >>>', postData);\r\n                const response = await ProvidersService.createProvider(postData);\r\n                if (response.status == true) {\r\n                    console.log(response.data);\r\n                    this.setState({\r\n                        color: \"success\",\r\n                        authenticationMessage: \"Successfully created provider\",\r\n                        isLoading: false,\r\n                    });\r\n                    this.getList();\r\n\r\n\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        color: \"danger\",\r\n                        isLoading: false,\r\n                        authenticationMessage: response.data.data.error\r\n                    });\r\n                }\r\n            }\r\n            catch (e) {\r\n                console.log(e, e.data)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    createColumnDefinitions() {\r\n        return [\r\n            {\r\n                dataField: \"provider_id\",\r\n                hidden: true,\r\n                isKey: true,\r\n            },\r\n            {\r\n                dataField: \"name_tx\",\r\n                text: \"Provider Name\",\r\n                sort: true,\r\n                // align: \"center\",\r\n                sortCaret,\r\n                formatter: (cell) => <span className=\"text-inverse\">{cell}</span>,\r\n            },\r\n            {\r\n                dataField: \"created_dt\",\r\n                text: \"Date Added\",\r\n                formatter: (cell) => moment(cell).format(\"DD/MM/YYYY\"),\r\n                sort: true,\r\n                sortCaret,\r\n            },\r\n            {\r\n                text: \"Action\",\r\n                // sort: true,\r\n                // align: \"center\",\r\n                // sortCaret,\r\n                formatter: this.actionColButton,\r\n            },\r\n        ];\r\n    }\r\n    handleCallback = async (childData) =>{\r\n        if (childData.length > 1){            \r\n            this.getList(null,childData);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const columnDefs = this.createColumnDefinitions();\r\n        return (\r\n            <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={this.state.providersList}\r\n                columns={columnDefs}\r\n                exportCSV\r\n            >\r\n                {(props) => (\r\n                <React.Fragment>\r\n                    <div className=\"d-flex justify-content-end align-items-center mb-2\">\r\n                    <div className=\"d-flex ml-auto\">\r\n                        <CustomSearch className=\"mr-2\" {...props.searchProps} parentCallBack = {this.handleCallback} />\r\n                        <ButtonGroup>\r\n                        <Button size=\"sm\" outline id=\"modalDefault301\">\r\n                            <i className=\"fa fa-fw fa-plus\"></i>\r\n                        </Button>\r\n                        <UncontrolledModal target=\"modalDefault301\" className=\"modal-outline-primary\">\r\n                            <ModalHeader tag=\"h5\">\r\n                                New Provider                        \r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                            <Form>\r\n                                { /* START Input */}\r\n                                <FormGroup row>\r\n                                    <Label for=\"name\" sm={4}>\r\n                                        Provider Name\r\n                                    </Label>\r\n                                    <Col sm={8}>\r\n                                        <Input \r\n                                            type=\"text\" \r\n                                            name=\"name\" \r\n                                            id=\"name\" \r\n                                            placeholder=\"Full Name\"\r\n                                            value={this.state.name}\r\n                                            onChange={e => this.onChangeName(e.target.value)}\r\n                                        />\r\n                                        <FormText color=\"danger\">\r\n                                        {this.state.name_errorMessage}\r\n                                        </FormText>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                { /* END Input */}\r\n                                { /* START Input */}\r\n                                <FormGroup row>\r\n                                    <Label for=\"emailId\" sm={4}>\r\n                                        Email ID\r\n                                    </Label>\r\n                                    <Col sm={8}>\r\n                                        <Input \r\n                                            type=\"email\"\r\n                                            name=\"emailId\" \r\n                                            id=\"emailId\"\r\n                                            placeholder=\"user@example.com\"\r\n                                            value={this.state.emailId}\r\n                                            onChange={e => this.onChangeEmail(e.target.value)}\r\n                                        />\r\n                                        <FormText color=\"danger\">\r\n                                        {this.state.emailId_errorMessage}\r\n                                        </FormText>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                { /* END Input */}\r\n                                { /* START Radios */}\r\n                                <FormGroup row>\r\n                                    <Label for=\"password\" sm={4}>\r\n                                        Password\r\n                                    </Label>\r\n                                    <Col sm={8}>\r\n                                    <InputGroup>\r\n                                        <Input \r\n                                            type={(this.state.hidePassword) ? ('password') : ('text')}\r\n                                            name=\"password\" \r\n                                            id=\"password\"\r\n                                            placeholder=\"Password\" \r\n                                            className=\"bg-white\"\r\n                                            value={this.state.password}\r\n                                            onChange={e => this.onChangePassword(e.target.value)}\r\n                                        />\r\n                                        {(this.state.hidePassword) ?\r\n                                            <InputGroupAddon addonType=\"append\" onClick={() => this.secureEntry()}>\r\n                                                <i className=\"fa fa-fw fa-eye-slash\"></i>\r\n                                            </InputGroupAddon>  \r\n                                            :\r\n                                            <InputGroupAddon addonType=\"append\" onClick={() => this.secureEntry()}>\r\n                                                <i className=\"fa fa-fw fa-eye\"></i>\r\n                                            </InputGroupAddon>  \r\n                                        }\r\n\r\n                                    </InputGroup>\r\n                                    <FormText color=\"danger\">\r\n                                        {this.state.password_errorMessage}\r\n                                    </FormText>\r\n                                    \r\n                                    </Col>\r\n                                    \r\n                                </FormGroup>\r\n                                { /* END Radios */}\r\n                            </Form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <FormText color={this.state.color}>\r\n                                {this.state.authenticationMessage}\r\n                                </FormText>\r\n                                <UncontrolledModal.Close color=\"link\">\r\n                                    Discard\r\n                                </UncontrolledModal.Close>\r\n                                <Button color=\"primary\" onClick={() => this.CreateProvider()} disabled={this.state.isLoading}>\r\n                                Create\r\n                                </Button>\r\n                            </ModalFooter>\r\n                        </UncontrolledModal>\r\n                        </ButtonGroup>\r\n                        \r\n                    </div>\r\n                    </div>\r\n                    <BootstrapTable\r\n                    classes=\"table-responsive-lg\"\r\n                    bordered={false}\r\n                    responsive\r\n                    {...props.baseProps}\r\n                    />\r\n\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" outline onClick = {() => {this.getList(this.state.previousPage, null)}} disabled={(this.state.previousPage) ? false : true}>\r\n                            <i className=\"fa fa-fw fa-chevron-left\"></i>\r\n                        </Button>\r\n                        <Button size=\"sm\" outline onClick = {() => {this.getList(this.state.nextPage, null)}} disabled={(this.state.nextPage) ? false : true}>\r\n                            <i className=\"fa fa-fw fa-chevron-right\"></i>\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </React.Fragment>\r\n                )}\r\n            </ToolkitProvider>\r\n            \r\n        );\r\n    }\r\n}\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\ImmunizationsTable.js",["549","550","551","552","553","554","555","556","557","558","559","560","561"],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\AppointmentsTable.js",["562","563","564","565","566","567","568","569","570","571","572"],"import React from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { Comparator, dateFilter } from 'react-bootstrap-table2-filter'\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport _ from 'lodash';\r\nimport faker from 'faker/locale/en_US';\r\nimport moment from 'moment';\r\n\r\nimport {\r\n    // Badge,\r\n    Button,\r\n    // CustomInput,\r\n    // StarRating,\r\n    ButtonGroup\r\n} from '../../../../components';\r\nimport { CustomExportCSV } from './CustomExportButton';\r\nimport { CustomSearch } from './CustomSearch';\r\nimport { CustomPaginationPanel } from './CustomPaginationPanel';\r\nimport { CustomSizePerPageButton } from './CustomSizePerPageButton';\r\nimport { CustomPaginationTotal } from './CustomPaginationTotal';\r\n// import { randomArray } from './../../../../utilities';\r\nimport {\r\n    buildCustomTextFilter,\r\n    // buildCustomSelectFilter,\r\n    // buildCustomNumberFilter\r\n} from '../filters';\r\n\r\nimport AppointmentsService from './../../../../services/AppointmentsService';\r\nimport AuthenticationService from './../../../../services/AuthenticationService';\r\n\r\nconst sortCaret = (order) => {\r\n    if (!order)\r\n        return <i className=\"fa fa-fw fa-sort text-muted\"></i>;\r\n    if (order)\r\n        return <i className={`fa fa-fw text-muted fa-sort-${order}`}></i>\r\n}\r\n\r\n\r\nexport default class AppointmentsTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            appointmentsList: [],\r\n        };\r\n\r\n        this.headerCheckboxRef = React.createRef();\r\n    }\r\n\r\n    getList = async (page=null, search=null) => {\r\n        try {\r\n            const paramData = {\r\n                page: page,\r\n                search: search\r\n            }\r\n            \r\n            if (this.props.location.provider_id){\r\n                console.log(\"provider_id in appointments\",this.props.location.provider_id)\r\n                const response = await AppointmentsService.getPractitionerOfThisProvider(this.props.location.provider_id);\r\n                if (response.status == true){\r\n                    this.setState({\r\n                        appointmentsList: response.data.result,\r\n                        nextPage: response.data.next_page,\r\n                        previousPage: response.data.previous_page,\r\n                    });\r\n                }\r\n            }\r\n            else{\r\n                const response = await AppointmentsService.getList(paramData);\r\n                if (response.status == true){\r\n                    this.setState({\r\n                        appointmentsList: response.data.result,\r\n                        nextPage: response.data.next_page,\r\n                        previousPage: response.data.previous_page,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log('error >>>', e);\r\n            console.log(e, e.data);\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (AuthenticationService.getUser()) {\r\n            this.getList();\r\n        }\r\n        else {\r\n            this.props.history.push({\r\n                pathname: \"/login\",\r\n            })\r\n        }\r\n    }\r\n\r\n    // handleSelect(row, isSelected) {\r\n    //     if (isSelected) {\r\n    //         this.setState({ selected: [...this.state.selected, row.id] })\r\n    //     } else {\r\n    //         this.setState({\r\n    //             selected: this.state.selected.filter(itemId => itemId !== row.id)\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    // handleSelectAll(isSelected, rows) {\r\n    //     if (isSelected) {\r\n    //         this.setState({ selected: _.map(rows, 'id') })\r\n    //     } else {\r\n    //         this.setState({ selected: [] });\r\n    //     }\r\n    // }\r\n\r\n    // handleAddRow() {\r\n    //     const currentSize = this.state.products.length;\r\n\r\n    //     this.setState({\r\n    //         products: [\r\n    //             generateRow(currentSize + 1),\r\n    //             ...this.state.products,\r\n    //         ]\r\n    //     });\r\n    // }\r\n\r\n    // handleDeleteRow() {\r\n    //     this.setState({\r\n    //         products: _.filter(this.state.products, product =>\r\n    //             !_.includes(this.state.selected, product.id))\r\n    //     })\r\n    // }\r\n\r\n    // handleResetFilters() {\r\n    //     this.nameFilter('');\r\n    //     this.qualityFilter('');\r\n    //     this.priceFilter('');\r\n    //     this.satisfactionFilter('');\r\n    // }\r\n\r\n    handleArchiveOnClick(cell, row) {\r\n        console.log(\"Archive button clicked, active flag:\", row.active_fl);\r\n    }\r\n\r\n    actionColButton = (cell, row) => {\r\n        return (\r\n            <Button\r\n                size=\"sm\"\r\n                outline\r\n                color=\"danger\"\r\n                onClick={() => this.handleArchiveOnClick(cell, row)}\r\n            >\r\n                Cancel\r\n            </Button>\r\n        );\r\n    };\r\n\r\n    createColumnDefinitions() {\r\n        return [\r\n            {\r\n                dataField: \"appointmetns_id\",\r\n                hidden: true,\r\n                isKey: true\r\n            },\r\n            {\r\n                dataField: 'appointmentDate',\r\n                text: 'Appointment Date',\r\n                formatter: (cell) =>\r\n                    moment(cell).format('DD/MM/YYYY'),\r\n                // filter: dateFilter({\r\n                //     className: 'd-flex align-items-center',\r\n                //     comparatorClassName: 'd-none',\r\n                //     dateClassName: 'form-control form-control-sm',\r\n                //     comparator: Comparator.GT,\r\n                //     getFilter: filter => { this.stockDateFilter = filter; }\r\n                // }),\r\n                sort: true,\r\n                sortCaret\r\n            }, {\r\n                dataField: 'appointmentTime',\r\n                text: 'Appointment Time',\r\n                formatter: (cell) =>\r\n                    moment(cell).format('HH:mm:ss'),\r\n                // filter: dateFilter({\r\n                //     className: 'd-flex align-items-center',\r\n                //     comparatorClassName: 'd-none',\r\n                //     dateClassName: 'form-control form-control-sm',\r\n                //     comparator: Comparator.GT,\r\n                //     getFilter: filter => { this.stockDateFilter = filter; }\r\n                // }),\r\n                sort: true,\r\n                sortCaret\r\n            }, {\r\n                dataField: 'patientName',\r\n                text: 'Patient Name',\r\n                sort: true,\r\n                // align: \"center\",\r\n                sortCaret,\r\n                formatter: (cell) => (\r\n                    <span className=\"text-inverse\">\r\n                        { cell}\r\n                    </span>\r\n                ),\r\n                // ...buildCustomTextFilter({\r\n                //     placeholder: 'Enter Patient name...',\r\n                //     getFilter: filter => { this.nameFilter = filter; }\r\n                // })\r\n            }, {\r\n                dataField: 'scheduledBy',\r\n                text: 'Scheduled By',\r\n                sort: true,\r\n                sortCaret,\r\n                formatter: (cell) => (\r\n                    <span className=\"text-inverse\">\r\n                        { cell}\r\n                    </span>\r\n                ),\r\n                // ...buildCustomTextFilter({\r\n                //     placeholder: 'Enter Patient name...',\r\n                //     getFilter: filter => { this.nameFilter = filter; }\r\n                // })\r\n            }, {\r\n                dataField: 'scheduledOn',\r\n                text: 'Scheduled On',\r\n                formatter: (cell) =>\r\n                    moment(cell).format('DD/MM/YYYY'),\r\n                // filter: dateFilter({\r\n                //     className: 'd-flex align-items-center',\r\n                //     comparatorClassName: 'd-none',\r\n                //     dateClassName: 'form-control form-control-sm',\r\n                //     comparator: Comparator.GT,\r\n                //     getFilter: filter => { this.stockDateFilter = filter; }\r\n                // }),\r\n                sort: true,\r\n                sortCaret\r\n            }, {\r\n                text: 'Action',\r\n                // sort: true,\r\n                // align: \"center\",\r\n                // sortCaret,\r\n                formatter: this.actionColButton\r\n            }\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const columnDefs = this.createColumnDefinitions();\r\n        // const paginationDef = paginationFactory({\r\n        //     paginationSize: 5,\r\n        //     showTotal: true,\r\n        //     pageListRenderer: (props) => (\r\n        //         <CustomPaginationPanel {...props} size=\"sm\" className=\"ml-md-auto mt-2 mt-md-0\" />\r\n        //     ),\r\n        //     sizePerPageRenderer: (props) => (\r\n        //         <CustomSizePerPageButton {...props} />\r\n        //     ),\r\n        //     paginationTotalRenderer: (from, to, size) => (\r\n        //         <CustomPaginationTotal {...{ from, to, size }} />\r\n        //     )\r\n        // });\r\n        // const selectRowConfig = {\r\n        //     mode: 'checkbox',\r\n        //     selected: this.state.selected,\r\n        //     onSelect: this.handleSelect.bind(this),\r\n        //     onSelectAll: this.handleSelectAll.bind(this),\r\n        //     selectionRenderer: ({ mode, checked, disabled }) => (\r\n        //         <CustomInput type={ mode } checked={ checked } disabled={ disabled } />\r\n        //     ),\r\n        //     selectionHeaderRenderer: ({ mode, checked, indeterminate }) => (\r\n        //         <CustomInput type={ mode } checked={ checked } innerRef={el => el && (el.indeterminate = indeterminate)} />\r\n        //     )\r\n        // };\r\n        // console.log(this.state.appointmentsList);\r\n        return (\r\n            <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={this.state.appointmentsList}\r\n                columns={columnDefs}\r\n                search\r\n                exportCSV\r\n            >\r\n                {\r\n                    props => (\r\n                        <React.Fragment>\r\n                            <div className=\"d-flex justify-content-end align-items-center mb-2\">\r\n                                <div className=\"d-flex ml-auto\">\r\n                                    <CustomSearch\r\n                                        className=\"mr-2\"\r\n                                        {...props.searchProps}\r\n                                    />\r\n                                    <ButtonGroup>\r\n                                        <CustomExportCSV\r\n                                            {...props.csvProps}\r\n                                        >\r\n                                            Export\r\n                                    </CustomExportCSV>\r\n                                        <Button\r\n                                            size=\"sm\"\r\n                                            outline\r\n                                        // onClick={this.handleDeleteRow.bind(this)}\r\n                                        >\r\n                                            Delete\r\n                                    </Button>\r\n                                        <Button\r\n                                            size=\"sm\"\r\n                                            outline\r\n                                        // onClick={this.handleAddRow.bind(this)}\r\n                                        >\r\n                                            <i className=\"fa fa-fw fa-plus\"></i>\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </div>\r\n                            </div>\r\n                            <BootstrapTable\r\n                                classes=\"table-responsive\"\r\n                                // pagination={paginationDef}\r\n                                filter={filterFactory()}\r\n                                // selectRow={ selectRowConfig }\r\n                                bordered={false}\r\n                                responsive\r\n                                {...props.baseProps}\r\n                            />\r\n\r\n                            <ButtonGroup>\r\n                                <Button size=\"sm\" outline onClick={() => { this.getList(this.state.previousPage, null) }} disabled={(this.state.previousPage) ? false : true}>\r\n                                    <i className=\"fa fa-fw fa-chevron-left\"></i>\r\n                                </Button>\r\n                                <Button size=\"sm\" outline onClick={() => { this.getList(this.state.nextPage, null) }} disabled={(this.state.nextPage) ? false : true}>\r\n                                    <i className=\"fa fa-fw fa-chevron-right\"></i>\r\n                                </Button>\r\n                            </ButtonGroup>\r\n\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            </ToolkitProvider>\r\n        );\r\n    }\r\n}","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\VaccinesTable.js",["573","574","575","576","577","578","579","580","581","582","583","584","585","586","587"],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\CustomPaginationPanel.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\CustomSearch.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\CustomExportButton.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\CustomSizePerPageButton.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\CustomPaginationTotal.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\filters\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\filters\\selectFilter.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\filters\\textFilter.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\filters\\numberFilter.js",["588"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport uid from 'uuid/v4';\r\nimport { customFilter, Comparator, FILTER_TYPES } from 'react-bootstrap-table2-filter';\r\n\r\nimport { CustomInput, Input } from './../../../../components';\r\n\r\nconst comparatorSign = (comp) => {\r\n    switch (comp) {\r\n        case Comparator.EQ:\r\n            return '=';\r\n        case Comparator.GT:\r\n            return '>';\r\n        case Comparator.LT:\r\n            return '<';\r\n    }\r\n}\r\n\r\nclass NumberFilter extends React.Component {\r\n    static propTypes = {\r\n        column: PropTypes.object.isRequired,\r\n        onFilter: PropTypes.func.isRequired,\r\n        placeholder: PropTypes.string,\r\n        getFilter: PropTypes.func,\r\n        comparators: PropTypes.array,\r\n        comparator: PropTypes.string,\r\n        onClick: PropTypes.func\r\n    }\r\n\r\n    static defaultProps = {\r\n        comparators: [Comparator.EQ],\r\n        comparator: Comparator.EQ\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            comparator: props.comparator\r\n        }\r\n\r\n        this.comparatorInputId = uid();\r\n        this.valueInputId = uid();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (_.isFunction(this.props.getFilter)) {\r\n            this.props.getFilter((value) => {\r\n                this.setState({ value });\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (\r\n            prevState.value !== this.state.value ||\r\n            prevState.comparator !== this.state.comparator\r\n        ) {\r\n            this.props.onFilter({\r\n                number: this.state.value,\r\n                comparator: this.state.comparator\r\n            });\r\n        }\r\n        if (prevProps.comparator !== this.props.comparator) {\r\n            this.setState({ comparator: this.props.comparator });\r\n        }\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.stopPropagation();\r\n\r\n        if (this.props.onClick) {\r\n            this.props.onClick(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { placeholder, comparators } = this.props;\r\n        const { comparator } = this.state;\r\n        return (\r\n            <div className='d-flex'>\r\n            {\r\n                (!_.isEmpty(comparators) && comparators.length > 0) && (\r\n                    <CustomInput\r\n                        type=\"select\"\r\n                        bsSize=\"sm\"\r\n                        onChange={(e) => { this.setState({ comparator: e.target.value }) }}\r\n                        onClick={this.handleClick}\r\n                        value={ comparator }\r\n                        className=\"d-block bg-white mr-1\"\r\n                        id={this.comparatorInputId}\r\n                    >\r\n                        <option value=\"\"></option>\r\n\r\n                        {\r\n                            _.map(comparators, (comparator, index) => (\r\n                                <option\r\n                                    value={ comparator }\r\n                                    key={ index }\r\n                                >\r\n                                    { comparatorSign(comparator) }\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </CustomInput>\r\n                )\r\n            }\r\n                <Input\r\n                    type=\"number\"\r\n                    className=\"bg-white\"\r\n                    bsSize=\"sm\"\r\n                    onChange={(e) => { this.setState({ value: e.target.value }) }}\r\n                    onClick={this.handleClick}\r\n                    value={ this.state.value }\r\n                    placeholder={ placeholder }\r\n                    id={this.valueInputId}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const buildCustomNumberFilter = ({ placeholder, getFilter, comparators, ...other } = {}) => ({\r\n    filter: customFilter({\r\n        type: FILTER_TYPES.NUMBER,\r\n        ...other\r\n    }),\r\n    filterRenderer: function NumberFilterWrap(onFilter, column) {\r\n        return (\r\n            <NumberFilter\r\n                {...{\r\n                    onFilter,\r\n                    column,\r\n                    placeholder,\r\n                    getFilter,\r\n                    comparators\r\n                }}\r\n            />\r\n        )\r\n    }\r\n});","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledModal\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledModal\\UncontrolledModalClose.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledModal\\UncontrolledModal.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledModal\\context.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\UncontrolledModal\\UncontrolledModalSave.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\ProvidersService.js",["589","590","591"],"import axios from 'axios';\r\nimport paths from '../config/Endpoint';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst getList = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        },\r\n        params: {\r\n            page: data.page,\r\n            search: data.search\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.get(paths.providers, config)\r\n        .then(function (res) {\r\n            response = { status: true, data: res.data }\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\nconst createProvider = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.post(paths.providers, data, config)\r\n        .then(function (res) {\r\n            response = { status: true, data: res.data }\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\nconst getAllProvidersList = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.get(paths.get_all_providers, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\n\r\n\r\nconst ProvidersService = {\r\n    getList: getList,\r\n    createProvider: createProvider,\r\n    getAllProvidersList: getAllProvidersList\r\n}\r\nexport default ProvidersService;","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\VaccinesService.js",["592","593","594"],"import axios from 'axios';\r\nimport paths from '../config/Endpoint';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst getVaccines = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        },\r\n        params: {\r\n            page: data.page,\r\n            search: data.search\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.get(paths.vaccines, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\n\r\nconst createVaccine = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.post(paths.vaccines, data, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\nconst getAllVaccinesList = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    var apiPath = paths.get_all_vaccines;\r\n    const res = await axios.get(apiPath, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\n\r\n\r\nconst VaccinesService = {\r\n    getVaccines: getVaccines,\r\n    createVaccine: createVaccine,\r\n    getAllVaccinesList: getAllVaccinesList\r\n}\r\nexport default VaccinesService;","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\PractitionersTable.js",["595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613"],"import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport filterFactory, {\r\n    Comparator,\r\n    dateFilter,\r\n} from \"react-bootstrap-table2-filter\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport axios from 'axios';\r\nimport paths from './../../../../config/Endpoint';\r\nimport AuthenticationService from './../../../../services/AuthenticationService';\r\nimport Config from './../../../../config/Config';\r\n\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    UncontrolledModal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Col,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    FormText,\r\n    ModalFooter,\r\n    Label,\r\n    Form,\r\n    FormGroup,\r\n} from \"../../../../components\";\r\nimport { CustomExportCSV } from \"./CustomExportButton\";\r\nimport { CustomSearch } from \"./CustomSearch\";\r\nimport { CustomPaginationPanel } from \"./CustomPaginationPanel\";\r\nimport { CustomSizePerPageButton } from \"./CustomSizePerPageButton\";\r\nimport { CustomPaginationTotal } from \"./CustomPaginationTotal\";\r\nimport {\r\n    buildCustomTextFilter\r\n} from \"../filters\";\r\n\r\nimport PractitionersService from './../../../../services/PractitionersService';\r\nimport validator from 'validator';\r\nimport MenuListingService from './../../../../services/MenuListingService';\r\nimport ProvidersService from \"../../../../services/ProvidersService\";\r\n\r\nconst sortCaret = (order) => {\r\n    if (!order) return <i className=\"fa fa-fw fa-sort text-muted\"></i>;\r\n    if (order) return <i className={`fa fa-fw text-muted fa-sort-${order}`}></i>;\r\n};\r\n\r\nexport default class PractitionersTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            practitionersList: [],\r\n            firstname: '',\r\n            name_errorMessage: '',\r\n            lastname_errorMessage: \"\",\r\n            lastname: \"\",\r\n            emailId: \"\",\r\n            emailId_errorMessage: '',\r\n            hidePassword: true,\r\n            password: '',\r\n            password_errorMessage: '',\r\n            color: \"black\",\r\n            isLoading: false,\r\n            mykad_errorMessage: '',\r\n            mykad: '',\r\n            type: 1,\r\n            firstname_errorMessage: '',\r\n            authenticationMessage: '',\r\n            allProviders: [],\r\n            provider: null,\r\n            provide_id: null,\r\n            previousPage: '',\r\n            nextPage: '',\r\n        };\r\n        this.headerCheckboxRef = React.createRef();\r\n    }\r\n\r\n\r\n    getList = async (page=null, search=null) => {\r\n        try {\r\n            const paramData = {\r\n                page: page,\r\n                search: search\r\n            }\r\n            \r\n            if (this.props.location.provider_id){\r\n                const response = await PractitionersService.getPractitionerOfThisProvider(this.props.location.provider_id);\r\n                if (response.status == true){\r\n                    this.setState({\r\n                        practitionersList: response.data.result,\r\n                        nextPage: response.data.next_page,\r\n                        previousPage: response.data.previous_page,\r\n                    });\r\n                }\r\n            }\r\n            else{\r\n                const response = await PractitionersService.getList(paramData);\r\n                if (response.status == true){\r\n                    this.setState({\r\n                        practitionersList: response.data.result,\r\n                        nextPage: response.data.next_page,\r\n                        previousPage: response.data.previous_page,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log('error >>>', e);\r\n            console.log(e, e.data);\r\n        }\r\n    }\r\n\r\n    getAllProviders = async () => {\r\n        try {\r\n            const response = await ProvidersService.getAllProvidersList();\r\n            if (response.status == true) {\r\n                this.setState({\r\n                    allProviders: response.data.data,\r\n                    provider: (response.data.data)[0].provider_id,\r\n                });\r\n                console.log('all Providers List >>>', this.state.allProviders);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log('error >>>', e);\r\n            console.log(e, e.data);\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (AuthenticationService.getUser()) {\r\n            this.getList();\r\n            if (Config.profileData.role === 100){\r\n                this.getAllProviders();\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.props.history.push({\r\n                pathname: \"/login\",\r\n            })\r\n        }\r\n    }\r\n\r\n    // handleAddRow() {\r\n    //   const currentSize = this.state.products.length;\r\n\r\n    //   this.setState({\r\n    //     products: [generateRow(currentSize + 1), ...this.state.products],\r\n    //   });\r\n    // }\r\n\r\n    handleDeleteRow() {\r\n        this.setState({\r\n            products: _.filter(\r\n                this.state.products,\r\n                (product) => !_.includes(this.state.selected, product.id)\r\n            ),\r\n        });\r\n    }\r\n\r\n    handleImmunizationssOnClick(cell, row) {\r\n        console.log(\"Immunizations Button clicked, rowId:\", row.practitioner_id);\r\n    }\r\n\r\n    handleAppointmentsOnClick(cell, row) {\r\n        console.log(\"Appointments button clicked, rowId:\", row.practitioner_id);\r\n    }\r\n\r\n    handleArchiveOnClick(cell, row) {\r\n        console.log(\"Archive button clicked, active flag:\", row.active_fl);\r\n    }\r\n\r\n    actionColButton = (cell, row) => {\r\n        return (\r\n            <ButtonGroup>\r\n                <Button\r\n                    size=\"sm\"\r\n                    outline\r\n                    color=\"purple\"\r\n                    onClick={() => this.handleAppointmentsOnClick(cell, row)}\r\n                >\r\n                    Appointments\r\n                </Button>\r\n                <Button\r\n                    size=\"sm\"\r\n                    outline\r\n                    color=\"primary\"\r\n                    onClick={() => this.handleImmunizationssOnClick(cell, row)}\r\n                >\r\n                    Immunizations\r\n                </Button>\r\n                <Button\r\n                    size=\"sm\"\r\n                    outline\r\n                    color=\"danger\"\r\n                    onClick={() => this.handleArchiveOnClick(cell, row)}\r\n                >\r\n                    Archive\r\n        </Button>\r\n            </ButtonGroup>\r\n        );\r\n    };\r\n\r\n    createColumnDefinitions() {\r\n        return [\r\n            {\r\n                dataField: \"practitioner_id\",\r\n                hidden: true,\r\n                isKey: true,\r\n            },\r\n            {\r\n                dataField: \"first_name\",\r\n                text: \"First Name\",\r\n                sort: true,\r\n                // align: \"center\",\r\n                sortCaret,\r\n                formatter: (cell) => <span className=\"text-inverse\">{cell}</span>,\r\n                // ...buildCustomTextFilter({\r\n                //     placeholder: \"Enter First name...\",\r\n                //     getFilter: (filter) => {\r\n                //         this.nameFilter = filter;\r\n                //     },\r\n                // }),\r\n            },\r\n            {\r\n                dataField: \"last_name\",\r\n                text: \"Last Name\",\r\n                sort: true,\r\n                // align: \"center\",\r\n                sortCaret,\r\n                formatter: (cell) => <span className=\"text-inverse\">{cell}</span>,\r\n                // ...buildCustomTextFilter({\r\n                //     placeholder: \"Enter Last name...\",\r\n                //     getFilter: (filter) => {\r\n                //         this.nameFilter = filter;\r\n                //     },\r\n                // }),\r\n            },\r\n            {\r\n                dataField: \"doctor_fl\",\r\n                text: \"Doctor/Nurse\",\r\n                sort: true,\r\n                // align: \"center\",\r\n                sortCaret,\r\n                formatter: (cell) => <span className=\"text-inverse\">{(cell) ? 'Doctor' : 'Nurse'}</span>,\r\n                // ...buildCustomTextFilter({\r\n                //     placeholder: \"Doctor\",\r\n                //     getFilter: (filter) => {\r\n                //         this.nameFilter = filter;\r\n                //     },\r\n                // }),\r\n            },\r\n            {\r\n                dataField: \"created_dt\",\r\n                text: \"Date Added\",\r\n                formatter: (cell) => moment(cell).format(\"DD/MM/YYYY\"),\r\n                // filter: dateFilter({\r\n                //     className: \"d-flex align-items-center\",\r\n                //     comparatorClassName: \"d-none\",\r\n                //     dateClassName: \"form-control form-control-sm\",\r\n                //     comparator: Comparator.GT,\r\n                //     getFilter: (filter) => {\r\n                //         this.stockDateFilter = filter;\r\n                //     },\r\n                // }),\r\n                sort: true,\r\n                sortCaret,\r\n            },\r\n            {\r\n                text: \"Action\",\r\n                // sort: true,\r\n                // align: \"center\",\r\n                // sortCaret,\r\n                formatter: this.actionColButton,\r\n            },\r\n        ];\r\n    }\r\n\r\n    onChangeFirstName(value) {\r\n        this.setState({\r\n            firstname: value\r\n        })\r\n    }\r\n\r\n    onChangeLastName(value) {\r\n        this.setState({\r\n            lastname: value\r\n        })\r\n    }\r\n\r\n    onChangeEmail(value) {\r\n        this.setState({\r\n            emailId: value\r\n        });\r\n    }\r\n\r\n    onChangePassword(value) {\r\n        this.setState({\r\n            password: value\r\n        })\r\n    }\r\n\r\n    secureEntry() {\r\n        this.setState({\r\n            hidePassword: !this.state.hidePassword,\r\n        });\r\n    }\r\n\r\n    onChangeMyKad(value) {\r\n        this.setState({\r\n            mykad: value\r\n        })\r\n    }\r\n\r\n    onChangeType(value) {\r\n        this.setState({\r\n            type: value\r\n        })\r\n    }\r\n\r\n    onChangeProvider(value) {\r\n        this.setState({\r\n            provider: value\r\n        })\r\n    }\r\n\r\n    async CreatePractitioner() {\r\n        this.setState({\r\n            isLoading: true,\r\n            authenticationMessage: '',\r\n        });\r\n\r\n        if (this.state.firstname == '') {\r\n            this.setState({\r\n                firstname_errorMessage: \"Enter First Name\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else {\r\n            this.setState({\r\n                firstname_errorMessage: \"\",\r\n            });\r\n        }\r\n\r\n        if (this.state.lastname == '') {\r\n            this.setState({\r\n                lastname_errorMessage: \"Enter Last Name\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else {\r\n            this.setState({\r\n                lastname_errorMessage: \"\",\r\n            });\r\n        }\r\n\r\n        if (this.state.emailId == '') {\r\n            this.setState({\r\n                emailId_errorMessage: \"Enter email ID\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else {\r\n            if (validator.isEmail(this.state.emailId)) {\r\n                this.setState({\r\n                    emailId_errorMessage: \"\"\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    emailId_errorMessage: \"Enter a valid email ID\",\r\n                    isLoading: false\r\n                })\r\n                return\r\n            }\r\n        }\r\n\r\n        if (this.state.password == \"\") {\r\n            this.setState({\r\n                password_errorMessage: \"Enter Password\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        } else {\r\n            this.setState({\r\n                password_errorMessage: \"\",\r\n            });\r\n        }\r\n\r\n        if (this.state.mykad == '') {\r\n            this.setState({\r\n                mykad_errorMessage: \"Enter MyKad id\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        } else {\r\n            if (this.state.mykad.length > 20) {\r\n                this.setState({\r\n                    mykad_errorMessage: \"length of MyKad id should be 20\",\r\n                    isLoading: false\r\n                });\r\n                return\r\n            } else {\r\n                this.setState({\r\n                    mykad_errorMessage: \"\",\r\n                })\r\n            }\r\n        }\r\n\r\n        const postData = {\r\n            \"first_name\": this.state.firstname,\r\n            \"last_name\": this.state.lastname,\r\n            \"email_tx\": this.state.emailId,\r\n            \"ic_card_tx\": this.state.mykad,\r\n            \"provider_id\": Number(this.state.provider),\r\n            \"doctor_fl\": this.state.type,\r\n            \"password\": this.state.password\r\n        }\r\n\r\n        try {\r\n            console.log(postData);\r\n            const response = await PractitionersService.createPractitioner(postData);\r\n            if (response.status == true) {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    color: \"success\",\r\n                    authenticationMessage: response.data.message,\r\n                    isLoading: false,\r\n                })\r\n                this.getList();\r\n            } else {\r\n                this.setState({\r\n                    color: \"danger\",\r\n                    isLoading: false,\r\n                    authenticationMessage: response.data.data.error\r\n                });\r\n            }\r\n        } catch (e) {\r\n            console.log(e, e.data);\r\n        }\r\n\r\n    }\r\n    handleCallback = async (childData) =>{\r\n        if (childData.length > 1){            \r\n            this.getList(null,childData);\r\n        }\r\n    }\r\n    render() {\r\n        const columnDefs = this.createColumnDefinitions();\r\n        \r\n        return (\r\n            <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={this.state.practitionersList}\r\n                columns={columnDefs}\r\n                search\r\n                exportCSV\r\n            >\r\n                {(props) => (\r\n                    <React.Fragment>\r\n                        <div className=\"d-flex justify-content-end align-items-center mb-2\">\r\n                            {/* <h6 className=\"my-0\">\r\n                                AdvancedTable A\r\n                            </h6> */}\r\n                            <div className=\"d-flex ml-auto\">\r\n                                <CustomSearch className=\"mr-2\" {...props.searchProps} parentCallBack = {this.handleCallback}/>\r\n                                <ButtonGroup>\r\n                                    <CustomExportCSV {...props.csvProps}>Export</CustomExportCSV>\r\n                                    <Button\r\n                                        size=\"sm\"\r\n                                        outline\r\n                                    // onClick={this.handleDeleteRow.bind(this)}\r\n                                    >\r\n                                        Delete\r\n                                    </Button>\r\n                                    <Button\r\n                                        size=\"sm\"\r\n                                        outline\r\n                                        id=\"modalDefault301\"\r\n                                    // onClick={this.handleAddRow.bind(this)}\r\n                                    >\r\n                                        <i className=\"fa fa-fw fa-plus\"></i>\r\n                                    </Button>\r\n                                    <UncontrolledModal target=\"modalDefault301\" className=\"modal-outline-primary\">\r\n                                        <ModalHeader tag=\"h5\">\r\n                                            New Practitioner\r\n                                        </ModalHeader>\r\n                                        <ModalBody>\r\n                                            <Form>\r\n                                                { /* START Input */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"firstname\" sm={4}>\r\n                                                        First Name\r\n                                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            name=\"firstname\"\r\n                                                            id=\"firstname\"\r\n                                                            placeholder=\"First Name\"\r\n                                                            value={this.state.firstname}\r\n                                                            onChange={e => this.onChangeFirstName(e.target.value)}\r\n                                                        />\r\n                                                        <FormText color=\"danger\">\r\n                                                            {this.state.firstname_errorMessage}\r\n                                                        </FormText>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Input */}\r\n                                                { /* START Input */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"lastname\" sm={4}>\r\n                                                        Last Name\r\n                                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            name=\"firstname\"\r\n                                                            id=\"lastname\"\r\n                                                            placeholder=\"Last Name\"\r\n                                                            value={this.state.lastname}\r\n                                                            onChange={e => this.onChangeLastName(e.target.value)}\r\n                                                        />\r\n                                                        <FormText color=\"danger\">\r\n                                                            {this.state.lastname_errorMessage}\r\n                                                        </FormText>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Input */}\r\n                                                { /* START Input */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"emailId\" sm={4}>\r\n                                                        Email ID\r\n                                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"email\"\r\n                                                            name=\"emailId\"\r\n                                                            id=\"emailId\"\r\n                                                            placeholder=\"user@example.com\"\r\n                                                            value={this.state.emailId}\r\n                                                            onChange={e => this.onChangeEmail(e.target.value)}\r\n                                                        />\r\n                                                        <FormText color=\"danger\">\r\n                                                            {this.state.emailId_errorMessage}\r\n                                                        </FormText>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Input */}\r\n                                                { /* START Input */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"password\" sm={4}>\r\n                                                        Password\r\n                                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <InputGroup>\r\n                                                            <Input\r\n                                                                type={(this.state.hidePassword) ? ('password') : ('text')}\r\n                                                                name=\"password\"\r\n                                                                id=\"password\"\r\n                                                                placeholder=\"Password\"\r\n                                                                className=\"bg-white\"\r\n                                                                value={this.state.password}\r\n                                                                onChange={e => this.onChangePassword(e.target.value)}\r\n                                                            />\r\n                                                            {(this.state.hidePassword) ?\r\n                                                                <InputGroupAddon addonType=\"append\" onClick={() => this.secureEntry()}>\r\n                                                                    <i className=\"fa fa-fw fa-eye-slash\"></i>\r\n                                                                </InputGroupAddon>\r\n                                                                :\r\n                                                                <InputGroupAddon addonType=\"append\" onClick={() => this.secureEntry()}>\r\n                                                                    <i className=\"fa fa-fw fa-eye\"></i>\r\n                                                                </InputGroupAddon>\r\n                                                            }\r\n\r\n                                                        </InputGroup>\r\n                                                        <FormText color=\"danger\">\r\n                                                            {this.state.password_errorMessage}\r\n                                                        </FormText>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Input */}\r\n                                                { /* START Input */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"mykad\" sm={4}>\r\n                                                        MyKad id\r\n                                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            name=\"mykad\"\r\n                                                            id=\"mykad\"\r\n                                                            placeholder=\"MyKad id\"\r\n                                                            value={this.state.mykad}\r\n                                                            onChange={e => this.onChangeMyKad(e.target.value)}\r\n                                                        />\r\n                                                        <FormText color=\"danger\">\r\n                                                            {this.state.mykad_errorMessage}\r\n                                                        </FormText>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Input */}\r\n                                                { /* START Select */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"type\" sm={4}>\r\n                                                        Type\r\n                                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"select\"\r\n                                                            name=\"select\"\r\n                                                            id=\"type\"\r\n                                                            onChange={e => this.onChangeType(e.target.value)}\r\n                                                        >\r\n                                                            <option value={1}>Doctor</option>\r\n                                                            <option value={0}>Nurse</option>\r\n                                                        </Input>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Select */}\r\n\r\n                                                { /* START Select */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"provider\" sm={4}>\r\n                                                        Provider\r\n                                                    </Label>\r\n                                                    <Col sm={8}>\r\n\r\n                                                        {Config.profileData.role === 100 ? (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name=\"select\"\r\n                                                                id=\"provider\"\r\n                                                                onChange={e => this.onChangeProvider(e.target.value)}\r\n                                                            >\r\n\r\n                                                                {this.state.allProviders.map((obj) => <option value={obj.provider_id}>{obj.name}</option>)}\r\n\r\n                                                                {/* <option defaultValue=\"\">SSG Hospital</option>\r\n                                                                <option>KD Hospital</option> */}\r\n                                                            </Input>\r\n                                                        ) : (\r\n                                                                <option>{Config.profileData.name}</option>\r\n                                                            )}\r\n\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Select */}\r\n                                            </Form>\r\n                                        </ModalBody>\r\n                                        <ModalFooter>\r\n                                            <FormText color={this.state.color}>\r\n                                                {this.state.authenticationMessage}\r\n                                            </FormText>\r\n                                            <UncontrolledModal.Close color=\"link\">\r\n                                                Discard\r\n                                            </UncontrolledModal.Close>\r\n                                            <Button color=\"primary\" onClick={() => this.CreatePractitioner()} disabled={this.state.isLoading}>\r\n                                                Create\r\n                                            </Button>\r\n                                        </ModalFooter>\r\n                                    </UncontrolledModal>\r\n                                </ButtonGroup>\r\n                            </div>\r\n                        </div>\r\n                        <BootstrapTable\r\n                            classes=\"table-responsive-sm\"\r\n                            // pagination={paginationDef}\r\n                            filter={filterFactory()}\r\n                            bordered={false}\r\n                            responsive\r\n                            {...props.baseProps}\r\n                        />\r\n\r\n                        <ButtonGroup>\r\n                            <Button size=\"sm\" outline onClick = {() => {this.getList(this.state.previousPage, null)}} disabled={(this.state.previousPage) ? false : true}>\r\n                                <i className=\"fa fa-fw fa-chevron-left\"></i>\r\n                            </Button>\r\n                            <Button size=\"sm\" outline onClick = {() => {this.getList(this.state.nextPage, null)}} disabled={(this.state.nextPage) ? false : true}>\r\n                                <i className=\"fa fa-fw fa-chevron-right\"></i>\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </React.Fragment>\r\n                )}\r\n            </ToolkitProvider>\r\n        );\r\n    }\r\n}\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\PractitionersService.js",["614","615","616","617"],"import axios from 'axios';\r\nimport paths from '../config/Endpoint';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst getList = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        },\r\n        params: {\r\n            page: data.page,\r\n            search: data.search\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.get(paths.practitioners, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\nconst createPractitioner = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.post(paths.practitioners, data, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\nconst getAllPractitionersList = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    var apiPath = paths.get_all_practitioners + data;\r\n    console.log('api path >>>', apiPath);\r\n    const res = await axios.get(apiPath, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\nconst practitionerOfThisProvider = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    var apiPath = paths.get_practitioners_of_this_provider + data;\r\n    console.log('api path >>>', apiPath);\r\n    const res = await axios.get(apiPath, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\n\r\n\r\nconst PractitionersService = {\r\n    getList: getList,\r\n    createPractitioner: createPractitioner,\r\n    getAllPractitionersList: getAllPractitionersList,\r\n    getPractitionerOfThisProvider: practitionerOfThisProvider\r\n    \r\n}\r\nexport default PractitionersService;","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\index.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\LayoutContent.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\LayoutNavbar.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\LayoutSidebar.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\withPageConfig.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\setupPage.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\PageConfigContext.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\components\\Layout\\Layout.js",[],"E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\routes\\Tables\\ExtendedTable\\components\\PatientsTable.js",["618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640"],"import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport filterFactory, {\r\n    Comparator,\r\n    dateFilter,\r\n} from \"react-bootstrap-table2-filter\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport validator from 'validator';\r\nimport {\r\n    // Badge,\r\n    Button,\r\n    // CustomInput,\r\n    // StarRating,\r\n    ButtonGroup,\r\n    UncontrolledModal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Col,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    FormText,\r\n    ModalFooter,\r\n    Label,\r\n    CustomInput,\r\n    Form,\r\n    FormGroup,\r\n    Pagination,\r\n    PaginationItem,\r\n    PaginationLink\r\n} from \"../../../../components\";\r\nimport { CustomExportCSV } from \"./CustomExportButton\";\r\nimport { CustomSearch } from \"./CustomSearch\";\r\nimport { CustomPaginationPanel } from \"./CustomPaginationPanel\";\r\nimport { CustomSizePerPageButton } from \"./CustomSizePerPageButton\";\r\nimport { CustomPaginationTotal } from \"./CustomPaginationTotal\";\r\nimport {\r\n    buildCustomTextFilter\r\n} from \"../filters\";\r\n\r\nimport Config from './../../../../config/Config';\r\nimport PatientsService from './../../../../services/PatientsService';\r\nimport AuthenticationService from './../../../../services/AuthenticationService';\r\nimport ProvidersService from \"./../../../../services/ProvidersService\";\r\nimport PractitionersService from \"./../../../../services/PractitionersService\";\r\n\r\nconst sortCaret = (order) => {\r\n    if (!order) return <i className=\"fa fa-fw fa-sort text-muted\"></i>;\r\n    if (order) return <i className={`fa fa-fw text-muted fa-sort-${order}`}></i>;\r\n};\r\n\r\nexport default class ProviderTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            patientsList: [],\r\n            first_name: '',\r\n            last_name: '',\r\n            emailId: '',\r\n            password: '',\r\n            mykad: '',\r\n            first_name_errorMessage: '',\r\n            last_name_errorMessage: '',\r\n            emailId_errorMessage: '',\r\n            password_errorMessage: '',\r\n            authenticationMessage: '',\r\n            hidePassword: true,\r\n            color: \"black\",\r\n            isLoading: false,\r\n            provider: null,\r\n            practitioner: null,\r\n            allProviders: [],\r\n            allPractitioners: [],\r\n            nextPage: '',\r\n            previousPage: ''\r\n        };\r\n\r\n        this.headerCheckboxRef = React.createRef();\r\n    }\r\n\r\n    getPatient = async (page = null, search = null) => {\r\n        try {\r\n            const paramData = {\r\n                page: page,\r\n                search: search\r\n            }\r\n            const response = await PatientsService.getPatient(paramData);\r\n            console.log('data >>>', response.data);\r\n            if (response.status == true) {\r\n                this.setState({\r\n                    patientsList: response.data.result,\r\n                    nextPage: response.data.next_page,\r\n                    previousPage: response.data.previous_page,\r\n                });\r\n                console.log('patientsList >>>', this.state.patientsList);\r\n                console.log('previous page >>>', this.state.previousPage);\r\n                console.log('next page >>>', this.state.nextPage);\r\n            }\r\n\r\n        }\r\n        catch (e) {\r\n            console.log('error >>>', e);\r\n            console.log(e, e.data);\r\n        }\r\n    }\r\n    getAllProviders = async () => {\r\n        try {\r\n            const response = await ProvidersService.getAllProvidersList();\r\n            if (response.status == true) {\r\n                this.setState({\r\n                    allProviders: response.data.data,\r\n                    provider: (response.data.data)[0].provider_id,\r\n                });\r\n                console.log('all Providers List >>>', this.state.allProviders);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log('error >>>', e);\r\n            console.log(e, e.data);\r\n        }\r\n    }\r\n    getAllPractitioners = async (value) => {\r\n        try {\r\n            console.log('id >>>', value);\r\n            const response = await PractitionersService.getAllPractitionersList(value);\r\n            if (response.status == true) {\r\n                if (response.data.data) {\r\n                    this.setState({\r\n                        allPractitioners: response.data.data,\r\n                        practitioner: (response.data.data)[0].practitioner_id\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        allPractitioners: [],\r\n                    });\r\n                }\r\n                console.log('all practitioner List >>>', this.state.allPractitioners);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log('error >>>', e);\r\n            console.log(e, e.data);\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if (AuthenticationService.getUser()) {\r\n            this.getPatient();\r\n            console.log('profile', Config.profileData);\r\n            if (Config.profileData.role === 100) {\r\n                this.getAllProviders();\r\n            }\r\n            if (Config.profileData.role === 50) {\r\n                this.getAllPractitioners(Config.profileData.id);\r\n\r\n            }\r\n        }\r\n        else {\r\n            this.props.history.push({\r\n                pathname: \"/login\",\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleMedicalRecordOnClick(cell, row) {\r\n        console.log(\"Medical Record Button clicked, rowId:\", row.patient_id);\r\n        // console.log(this.props);\r\n        this.props.history.push({\r\n            pathname: \"/practitioners\",\r\n            patient_id: row.patient_id\r\n        });\r\n        // return <Redirect to='/practitioners' />\r\n        // <Link to='/practitioners' />\r\n    }\r\n\r\n\r\n    handleArchiveOnClick(cell, row) {\r\n        console.log(\"Archive button clicked, active flag:\", row.active_fl);\r\n    }\r\n\r\n    actionColButton = (cell, row) => {\r\n        return (\r\n            <ButtonGroup>\r\n                <Button\r\n                    size=\"sm\"\r\n                    outline\r\n                    color=\"indigo\"\r\n                    onClick={() => this.handleMedicalRecordOnClick(cell, row)}\r\n                >\r\n                    Medical Record\r\n        </Button>\r\n                <Button\r\n                    size=\"sm\"\r\n                    outline\r\n                    color=\"danger\"\r\n                    onClick={() => this.handleArchiveOnClick(cell, row)}\r\n                >\r\n                    Archive\r\n        </Button>\r\n            </ButtonGroup>\r\n        );\r\n    };\r\n\r\n    onChangeFirstName(value) {\r\n        this.setState({\r\n            first_name: value\r\n        })\r\n    }\r\n\r\n    onChangeLastName(value) {\r\n        this.setState({\r\n            last_name: value\r\n        })\r\n    }\r\n\r\n    onChangeEmail(value) {\r\n        this.setState({\r\n            emailId: value\r\n        });\r\n    }\r\n\r\n    onChangePassword(value) {\r\n        this.setState({\r\n            password: value\r\n        })\r\n    }\r\n\r\n    secureEntry() {\r\n        this.setState({\r\n            hidePassword: !this.state.hidePassword,\r\n        });\r\n    }\r\n\r\n    onChangeMyKad(value) {\r\n        this.setState({\r\n            mykad: value\r\n        })\r\n    }\r\n\r\n    onChangeType(value) {\r\n        this.setState({\r\n            type: value\r\n        })\r\n    }\r\n\r\n    onChangeProvider(value) {\r\n        console.log('provider_id >>>', value);\r\n        this.getAllPractitioners(value);\r\n        this.setState({\r\n            provider: value\r\n        })\r\n    }\r\n    onChangePractitioner(value) {\r\n        this.setState({\r\n            practitioner: value\r\n        })\r\n    }\r\n    async CreatePatient() {\r\n        this.setState({\r\n            isLoading: true,\r\n            authenticationMessage: '',\r\n        });\r\n\r\n        if (this.state.first_name == '') {\r\n            this.setState({\r\n                first_name_errorMessage: \"Enter First Name\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else {\r\n            this.setState({\r\n                first_name_errorMessage: \"\",\r\n            });\r\n        }\r\n\r\n        if (this.state.last_name == '') {\r\n            this.setState({\r\n                last_name_errorMessage: \"Enter Last Name\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else {\r\n            this.setState({\r\n                last_name_errorMessage: \"\",\r\n            });\r\n        }\r\n\r\n        if (this.state.emailId == '') {\r\n            this.setState({\r\n                emailId_errorMessage: \"Enter email ID\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        }\r\n        else {\r\n            if (validator.isEmail(this.state.emailId)) {\r\n                this.setState({\r\n                    emailId_errorMessage: \"\"\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    emailId_errorMessage: \"Enter a valid email ID\",\r\n                    isLoading: false\r\n                })\r\n                return\r\n            }\r\n        }\r\n\r\n        if (this.state.password == \"\") {\r\n            this.setState({\r\n                password_errorMessage: \"Enter Password\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        } else {\r\n            this.setState({\r\n                password_errorMessage: \"\",\r\n            });\r\n        }\r\n\r\n        if (this.state.mykad == '') {\r\n            this.setState({\r\n                mykad_errorMessage: \"Enter MyKad id\",\r\n                isLoading: false\r\n            });\r\n            return\r\n        } else {\r\n            if (this.state.mykad.length > 20) {\r\n                this.setState({\r\n                    mykad_errorMessage: \"MyKad ID can be maximum of 20 characters\",\r\n                    isLoading: false\r\n                });\r\n                return\r\n            } else {\r\n                this.setState({\r\n                    mykad_errorMessage: \"\",\r\n                })\r\n            }\r\n        }\r\n\r\n        const postData = {\r\n            \"first_name\": this.state.first_name,\r\n            \"last_name\": this.state.last_name,\r\n            \"email_tx\": this.state.emailId,\r\n            \"ic_card_tx\": this.state.mykad,\r\n            \"provider_id\": parseInt(this.state.provider),\r\n            \"practitioner_id\": parseInt(this.state.practitioner),\r\n            \"password\": this.state.password\r\n        }\r\n\r\n        try {\r\n            console.log(postData);\r\n            const response = await PatientsService.createPatient(postData);\r\n            if (response.status == true) {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    color: \"success\",\r\n                    authenticationMessage: response.data.message,\r\n                    isLoading: false,\r\n                })\r\n                this.getPatient();\r\n            } else {\r\n                this.setState({\r\n                    color: \"danger\",\r\n                    isLoading: false,\r\n                    authenticationMessage: response.data.data.error\r\n                });\r\n            }\r\n        } catch (e) {\r\n            console.log(e, e.data);\r\n        }\r\n\r\n    }\r\n\r\n  createColumnDefinitions() {\r\n    return [\r\n        {\r\n            dataField: \"patient_id\",\r\n            hidden: true,\r\n            isKey: true,\r\n        },\r\n        {\r\n            dataField: \"first_name\",\r\n            text: \"Patient's First Name\",\r\n            sort: true,\r\n            sortCaret,\r\n            formatter: (cell) => <span className=\"text-inverse\">{cell}</span>,\r\n        },\r\n        {\r\n            dataField: \"last_name\",\r\n            text: \"Patient's Last Name\",\r\n            sort: true,\r\n            sortCaret,\r\n            formatter: (cell) => <span className=\"text-inverse\">{cell}</span>,\r\n        },\r\n        {\r\n            dataField: \"created_dt\",\r\n            text: \"Date Created\",\r\n            formatter: (cell) => moment(cell).format(\"DD/MM/YYYY\"),\r\n            sort: true,\r\n            sortCaret,\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            formatter: this.actionColButton,\r\n        },\r\n    ];\r\n}\r\nhandleCallback = async (childData) =>{\r\n    if (childData.length > 1){            \r\n        this.getPatient(null,childData);\r\n    }\r\n}\r\n\r\n    render() {\r\n        const columnDefs = this.createColumnDefinitions();\r\n\r\n\r\n        return (\r\n            <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={this.state.patientsList}\r\n                columns={columnDefs}\r\n                search\r\n                exportCSV\r\n            >\r\n                {(props) => (\r\n                    <React.Fragment>\r\n                        <div className=\"d-flex justify-content-end align-items-center mb-2\">\r\n                            {/* <h6 className=\"my-0\">\r\n                                    AdvancedTable A\r\n                                </h6> */}\r\n                <div className=\"d-flex ml-auto\">\r\n                    <CustomSearch className=\"mr-2\" {...props.searchProps} parentCallBack={this.handleCallback} />\r\n                    <ButtonGroup>\r\n                    <Button size=\"sm\" outline id=\"modalDefault301\">\r\n                        <i className=\"fa fa-fw fa-plus\"></i>\r\n                    </Button>\r\n                    <UncontrolledModal target=\"modalDefault301\" className=\"modal-outline-primary\">\r\n                        <ModalHeader tag=\"h5\">\r\n                            New Patient\r\n                        </ModalHeader>\r\n                                        <ModalBody>\r\n                                            <Form>\r\n                                                { /* START Input */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"first_name\" sm={4}>\r\n                                                        First Name\r\n                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            name=\"first_name\"\r\n                                                            id=\"first_name\"\r\n                                                            placeholder=\"First Name\"\r\n                                                            value={this.state.first_name}\r\n                                                            onChange={e => this.onChangeFirstName(e.target.value)}\r\n                                                        />\r\n                                                        <FormText color=\"danger\">\r\n                                                            {this.state.first_name_errorMessage}\r\n                                                        </FormText>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Input */}\r\n                                                { /* START Input */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"last_name\" sm={4}>\r\n                                                        Last Name\r\n                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            name=\"last_name\"\r\n                                                            id=\"last_name\"\r\n                                                            placeholder=\"Last Name\"\r\n                                                            value={this.state.last_name}\r\n                                                            onChange={e => this.onChangeLastName(e.target.value)}\r\n                                                        />\r\n                                                        <FormText color=\"danger\">\r\n                                                            {this.state.last_name_errorMessage}\r\n                                                        </FormText>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Input */}\r\n                                                { /* START Input */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"emailId\" sm={4}>\r\n                                                        Email ID\r\n                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"email\"\r\n                                                            name=\"emailId\"\r\n                                                            id=\"emailId\"\r\n                                                            placeholder=\"user@example.com\"\r\n                                                            value={this.state.emailId}\r\n                                                            onChange={e => this.onChangeEmail(e.target.value)}\r\n                                                        />\r\n                                                        <FormText color=\"danger\">\r\n                                                            {this.state.emailId_errorMessage}\r\n                                                        </FormText>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Input */}\r\n                                                { /* START Input */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"password\" sm={4}>\r\n                                                        Password\r\n                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <InputGroup>\r\n                                                            <Input\r\n                                                                type={(this.state.hidePassword) ? ('password') : ('text')}\r\n                                                                name=\"password\"\r\n                                                                id=\"password\"\r\n                                                                placeholder=\"Password\"\r\n                                                                className=\"bg-white\"\r\n                                                                value={this.state.password}\r\n                                                                onChange={e => this.onChangePassword(e.target.value)}\r\n                                                            />\r\n                                                            {(this.state.hidePassword) ?\r\n                                                                <InputGroupAddon addonType=\"append\" onClick={() => this.secureEntry()}>\r\n                                                                    <i className=\"fa fa-fw fa-eye-slash\"></i>\r\n                                                                </InputGroupAddon>\r\n                                                                :\r\n                                                                <InputGroupAddon addonType=\"append\" onClick={() => this.secureEntry()}>\r\n                                                                    <i className=\"fa fa-fw fa-eye\"></i>\r\n                                                                </InputGroupAddon>\r\n                                                            }\r\n\r\n                                                        </InputGroup>\r\n                                                        <FormText color=\"danger\">\r\n                                                            {this.state.password_errorMessage}\r\n                                                        </FormText>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Input */}\r\n                                                { /* START Input */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"mykad\" sm={4}>\r\n                                                        MyKad id\r\n                                    </Label>\r\n                                                    <Col sm={8}>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            name=\"mykad\"\r\n                                                            id=\"mykad\"\r\n                                                            placeholder=\"MyKad id\"\r\n                                                            value={this.state.mykad}\r\n                                                            onChange={e => this.onChangeMyKad(e.target.value)}\r\n                                                        />\r\n                                                        <FormText color=\"danger\">\r\n                                                            {this.state.mykad_errorMessage}\r\n                                                        </FormText>\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Input */}\r\n                                                { /* START Select */}\r\n                                                <FormGroup row>\r\n                                                    <Label for=\"provider\" sm={4}>\r\n                                                        Provider\r\n                                    </Label>\r\n                                                    <Col sm={8}>\r\n\r\n                                                        {Config.profileData.role === 100 ? (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name=\"select\"\r\n                                                                id=\"provider\"\r\n                                                                value={this.state.provider}\r\n                                                                onChange={e => this.onChangeProvider(e.target.value)}\r\n                                                            >\r\n\r\n                                                                {this.state.allProviders.map((obj) => <option value={obj.provider_id}>{obj.name}</option>)}\r\n\r\n                                            </Input>\r\n                                        ) : (                                            \r\n                                            <option>{Config.profileData.name}</option>\r\n                                        )}\r\n\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"practitioner\" sm={4}>\r\n                                        Practitioner\r\n                                    </Label>\r\n                                                    <Col sm={8}>\r\n\r\n                                                        {(Config.profileData.role === 100) || (Config.profileData.role === 50) ? (\r\n                                                            <Input\r\n                                                                type=\"select\"\r\n                                                                name=\"select\"\r\n                                                                id=\"practitioner\"\r\n                                                                value={this.state.practitioner}\r\n                                                                onChange={e => this.onChangePractitioner(e.target.value)}\r\n                                                            >\r\n\r\n                                                                {this.state.allPractitioners.map((obj) => <option value={obj.practitioner_id}>{obj.name}</option>)}\r\n\r\n                                                            </Input>\r\n                                                        ) : (\r\n                                                                <option>{Config.profileData.name}</option>\r\n                                                            )}\r\n\r\n                                                    </Col>\r\n                                                </FormGroup>\r\n                                                { /* END Select */}\r\n                                            </Form>\r\n                                        </ModalBody>\r\n                                        <ModalFooter>\r\n                                            <FormText color={this.state.color}>\r\n                                                {this.state.authenticationMessage}\r\n                                            </FormText>\r\n                                            <UncontrolledModal.Close color=\"link\">\r\n                                                Discard\r\n                            </UncontrolledModal.Close>\r\n                                            <Button color=\"primary\" onClick={() => this.CreatePatient()} disabled={this.state.isLoading}>\r\n                                                Create\r\n                            </Button>\r\n                                        </ModalFooter>\r\n                                    </UncontrolledModal>\r\n                                </ButtonGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <BootstrapTable\r\n                            classes=\"table-responsive-sm\"\r\n                            bordered={false}\r\n                            responsive\r\n                            {...props.baseProps}\r\n                        />\r\n\r\n                        <ButtonGroup>\r\n                            <Button size=\"sm\" outline onClick={() => { this.getPatient(this.state.previousPage, null) }} disabled={(this.state.previousPage) ? false : true}>\r\n                                <i className=\"fa fa-fw fa-chevron-left\"></i>\r\n                            </Button>\r\n                            <Button size=\"sm\" outline onClick={() => { this.getPatient(this.state.nextPage, null) }} disabled={(this.state.nextPage) ? false : true}>\r\n                                <i className=\"fa fa-fw fa-chevron-right\"></i>\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </React.Fragment>\r\n                )}\r\n            </ToolkitProvider>\r\n\r\n        );\r\n    }\r\n}\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\PatientsService.js",["641","642","643"],"import axios from 'axios';\r\nimport paths from '../config/Endpoint';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst getPatient = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        },\r\n        params: {\r\n            page: data.page,\r\n            search: data.search\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.get(paths.patients, config)\r\n        .then(function (res) {\r\n            response = { status: true, data: res.data }\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\nconst createPatient = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.post(paths.patients, data, config)\r\n        .then(function (res) {\r\n            response = { status: true, data: res.data }\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\nconst getAllPatientsList = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    var apiPath = paths.get_all_patients + data;\r\n    console.log('api path >>>', apiPath);\r\n    const res = await axios.get(apiPath, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\n\r\n\r\nconst ProvidersService = {\r\n    getPatient: getPatient,\r\n    createPatient: createPatient,\r\n    getAllPatientsList:getAllPatientsList\r\n}\r\nexport default ProvidersService;","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\ImmunizationsService.js",["644","645"],"import axios from 'axios';\r\nimport paths from '../config/Endpoint';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst getList = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        },\r\n        params: {\r\n            page: data.page,\r\n            search: data.search\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.get(paths.immunizations, config)\r\n        .then(function (res) {\r\n            response = { status: true, data: res.data }\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\nconst createImmunizations = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.post(paths.immunizations, data, config)\r\n        .then(function (res) {\r\n            response = { status: true, data: res.data }\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\n// const getAllProvidersList = async (data) => {\r\n//     const config = {\r\n//         headers: {\r\n//             'accept': 'application/json',\r\n//             'Content-Type': 'application/json',\r\n//             'Access-Control-Allow-Origin': '*',\r\n//             'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n//         }\r\n//     }\r\n//     var response;\r\n//     const res = await axios.get(paths.get_all_providers, config)\r\n//         .then(function (res){\r\n//             response = {status: true, data: res.data}\r\n//         })\r\n//         .catch(function (err) {\r\n//             console.log(err.response);\r\n//             response = { status: false, data: err.response };\r\n//         });\r\n//     return response;\r\n// }\r\n\r\n\r\n\r\nconst ImmunizationsService = {\r\n    getList: getList,\r\n    createImmunizations: createImmunizations,\r\n}\r\nexport default ImmunizationsService;\r\n","E:\\Freelance\\eHealth\\frontend\\ehealth_frontend\\src\\services\\AppointmentsService.js",["646"],"import axios from 'axios';\r\nimport paths from '../config/Endpoint';\r\nimport AuthenticationService from './AuthenticationService';\r\n\r\nconst getList = async (data) => {\r\n    const config = {\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Authorization': 'Bearer ' + AuthenticationService.getToken(),\r\n        },\r\n        params: {\r\n            page: data.page,\r\n            search: data.search\r\n        }\r\n    }\r\n    var response;\r\n    const res = await axios.get(paths.practitioners, config)\r\n        .then(function (res){\r\n            response = {status: true, data: res.data}\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.response);\r\n            response = { status: false, data: err.response };\r\n        });\r\n    return response;\r\n}\r\n\r\n\r\n\r\n\r\nconst AppointmentsService = {\r\n    getList: getList,\r\n}\r\nexport default AppointmentsService;",{"ruleId":"647","severity":1,"message":"648","line":5,"column":8,"nodeType":"649","messageId":"650","endLine":5,"endColumn":23},{"ruleId":"647","severity":1,"message":"651","line":6,"column":10,"nodeType":"649","messageId":"650","endLine":6,"endColumn":16},{"ruleId":"652","replacedBy":"653"},{"ruleId":"654","replacedBy":"655"},{"ruleId":"647","severity":1,"message":"656","line":6,"column":5,"nodeType":"649","messageId":"650","endLine":6,"endColumn":18},{"ruleId":"647","severity":1,"message":"657","line":8,"column":5,"nodeType":"649","messageId":"650","endLine":8,"endColumn":23},{"ruleId":"647","severity":1,"message":"658","line":13,"column":10,"nodeType":"649","messageId":"650","endLine":13,"endColumn":24},{"ruleId":"659","severity":1,"message":"660","line":29,"column":33,"nodeType":"661","messageId":"662","endLine":29,"endColumn":35},{"ruleId":"663","severity":1,"message":"664","line":70,"column":54,"nodeType":"665","messageId":"666","endLine":70,"endColumn":68},{"ruleId":"647","severity":1,"message":"667","line":3,"column":8,"nodeType":"649","messageId":"650","endLine":3,"endColumn":17},{"ruleId":"647","severity":1,"message":"668","line":9,"column":10,"nodeType":"649","messageId":"650","endLine":9,"endColumn":18},{"ruleId":"647","severity":1,"message":"669","line":2,"column":8,"nodeType":"649","messageId":"650","endLine":2,"endColumn":26},{"ruleId":"647","severity":1,"message":"670","line":4,"column":8,"nodeType":"649","messageId":"650","endLine":4,"endColumn":29},{"ruleId":"647","severity":1,"message":"671","line":5,"column":8,"nodeType":"649","messageId":"650","endLine":5,"endColumn":16},{"ruleId":"647","severity":1,"message":"672","line":10,"column":10,"nodeType":"649","messageId":"650","endLine":10,"endColumn":20},{"ruleId":"647","severity":1,"message":"673","line":2,"column":8,"nodeType":"649","messageId":"650","endLine":2,"endColumn":13},{"ruleId":"647","severity":1,"message":"674","line":11,"column":5,"nodeType":"649","messageId":"650","endLine":11,"endColumn":17},{"ruleId":"647","severity":1,"message":"675","line":12,"column":5,"nodeType":"649","messageId":"650","endLine":12,"endColumn":17},{"ruleId":"647","severity":1,"message":"676","line":16,"column":7,"nodeType":"649","messageId":"650","endLine":16,"endColumn":16},{"ruleId":"647","severity":1,"message":"677","line":2,"column":8,"nodeType":"649","messageId":"650","endLine":2,"endColumn":14},{"ruleId":"678","severity":1,"message":"679","line":7,"column":5,"nodeType":"680","messageId":"681","endLine":9,"endColumn":6},{"ruleId":"678","severity":1,"message":"679","line":8,"column":5,"nodeType":"680","messageId":"681","endLine":10,"endColumn":6},{"ruleId":"647","severity":1,"message":"677","line":5,"column":8,"nodeType":"649","messageId":"650","endLine":5,"endColumn":14},{"ruleId":"647","severity":1,"message":"682","line":12,"column":5,"nodeType":"649","messageId":"650","endLine":12,"endColumn":16},{"ruleId":"659","severity":1,"message":"660","line":44,"column":32,"nodeType":"661","messageId":"662","endLine":44,"endColumn":34},{"ruleId":"659","severity":1,"message":"660","line":66,"column":33,"nodeType":"661","messageId":"662","endLine":66,"endColumn":35},{"ruleId":"659","severity":1,"message":"660","line":83,"column":37,"nodeType":"661","messageId":"662","endLine":83,"endColumn":39},{"ruleId":"663","severity":1,"message":"664","line":70,"column":26,"nodeType":"665","messageId":"666","endLine":70,"endColumn":40},{"ruleId":"647","severity":1,"message":"683","line":3,"column":8,"nodeType":"649","messageId":"650","endLine":3,"endColumn":18},{"ruleId":"647","severity":1,"message":"684","line":2,"column":8,"nodeType":"649","messageId":"650","endLine":2,"endColumn":9},{"ruleId":"685","severity":1,"message":"686","line":30,"column":9,"nodeType":"687","endLine":34,"endColumn":10},{"ruleId":"663","severity":1,"message":"664","line":31,"column":18,"nodeType":"665","messageId":"666","endLine":31,"endColumn":32},{"ruleId":"647","severity":1,"message":"688","line":18,"column":11,"nodeType":"649","messageId":"650","endLine":18,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":16,"column":11,"nodeType":"649","messageId":"650","endLine":16,"endColumn":14},{"ruleId":"647","severity":1,"message":"689","line":3,"column":8,"nodeType":"649","messageId":"650","endLine":3,"endColumn":25},{"ruleId":"647","severity":1,"message":"690","line":4,"column":8,"nodeType":"649","messageId":"650","endLine":4,"endColumn":21},{"ruleId":"647","severity":1,"message":"691","line":5,"column":5,"nodeType":"649","messageId":"650","endLine":5,"endColumn":15},{"ruleId":"647","severity":1,"message":"692","line":6,"column":5,"nodeType":"649","messageId":"650","endLine":6,"endColumn":15},{"ruleId":"647","severity":1,"message":"684","line":9,"column":8,"nodeType":"649","messageId":"650","endLine":9,"endColumn":9},{"ruleId":"647","severity":1,"message":"693","line":32,"column":10,"nodeType":"649","messageId":"650","endLine":32,"endColumn":25},{"ruleId":"647","severity":1,"message":"694","line":34,"column":10,"nodeType":"649","messageId":"650","endLine":34,"endColumn":31},{"ruleId":"647","severity":1,"message":"695","line":35,"column":10,"nodeType":"649","messageId":"650","endLine":35,"endColumn":33},{"ruleId":"647","severity":1,"message":"696","line":36,"column":10,"nodeType":"649","messageId":"650","endLine":36,"endColumn":31},{"ruleId":"647","severity":1,"message":"697","line":38,"column":5,"nodeType":"649","messageId":"650","endLine":38,"endColumn":26},{"ruleId":"698","severity":1,"message":"699","line":61,"column":13,"nodeType":"700","messageId":"662","endLine":61,"endColumn":21},{"ruleId":"698","severity":1,"message":"701","line":68,"column":13,"nodeType":"700","messageId":"662","endLine":68,"endColumn":17},{"ruleId":"659","severity":1,"message":"660","line":84,"column":33,"nodeType":"661","messageId":"662","endLine":84,"endColumn":35},{"ruleId":"659","severity":1,"message":"660","line":191,"column":29,"nodeType":"661","messageId":"662","endLine":191,"endColumn":31},{"ruleId":"659","severity":1,"message":"660","line":204,"column":32,"nodeType":"661","messageId":"662","endLine":204,"endColumn":34},{"ruleId":"659","severity":1,"message":"660","line":226,"column":33,"nodeType":"661","messageId":"662","endLine":226,"endColumn":35},{"ruleId":"659","severity":1,"message":"660","line":245,"column":37,"nodeType":"661","messageId":"662","endLine":245,"endColumn":39},{"ruleId":"647","severity":1,"message":"689","line":3,"column":8,"nodeType":"649","messageId":"650","endLine":3,"endColumn":25},{"ruleId":"647","severity":1,"message":"691","line":5,"column":3,"nodeType":"649","messageId":"650","endLine":5,"endColumn":13},{"ruleId":"647","severity":1,"message":"692","line":6,"column":3,"nodeType":"649","messageId":"650","endLine":6,"endColumn":13},{"ruleId":"647","severity":1,"message":"684","line":9,"column":8,"nodeType":"649","messageId":"650","endLine":9,"endColumn":9},{"ruleId":"647","severity":1,"message":"702","line":17,"column":3,"nodeType":"649","messageId":"650","endLine":17,"endColumn":14},{"ruleId":"647","severity":1,"message":"703","line":24,"column":3,"nodeType":"649","messageId":"650","endLine":24,"endColumn":13},{"ruleId":"647","severity":1,"message":"704","line":25,"column":3,"nodeType":"649","messageId":"650","endLine":25,"endColumn":18},{"ruleId":"647","severity":1,"message":"705","line":32,"column":8,"nodeType":"649","messageId":"650","endLine":32,"endColumn":18},{"ruleId":"659","severity":1,"message":"660","line":92,"column":31,"nodeType":"661","messageId":"662","endLine":92,"endColumn":33},{"ruleId":"659","severity":1,"message":"660","line":109,"column":29,"nodeType":"661","messageId":"662","endLine":109,"endColumn":31},{"ruleId":"659","severity":1,"message":"660","line":126,"column":31,"nodeType":"661","messageId":"662","endLine":126,"endColumn":33},{"ruleId":"659","severity":1,"message":"660","line":144,"column":31,"nodeType":"661","messageId":"662","endLine":144,"endColumn":33},{"ruleId":"659","severity":1,"message":"660","line":169,"column":29,"nodeType":"661","messageId":"662","endLine":169,"endColumn":31},{"ruleId":"647","severity":1,"message":"689","line":3,"column":8,"nodeType":"649","messageId":"650","endLine":3,"endColumn":25},{"ruleId":"647","severity":1,"message":"691","line":4,"column":25,"nodeType":"649","messageId":"650","endLine":4,"endColumn":35},{"ruleId":"647","severity":1,"message":"692","line":4,"column":37,"nodeType":"649","messageId":"650","endLine":4,"endColumn":47},{"ruleId":"647","severity":1,"message":"684","line":6,"column":8,"nodeType":"649","messageId":"650","endLine":6,"endColumn":9},{"ruleId":"647","severity":1,"message":"673","line":7,"column":8,"nodeType":"649","messageId":"650","endLine":7,"endColumn":13},{"ruleId":"647","severity":1,"message":"694","line":19,"column":10,"nodeType":"649","messageId":"650","endLine":19,"endColumn":31},{"ruleId":"647","severity":1,"message":"695","line":20,"column":10,"nodeType":"649","messageId":"650","endLine":20,"endColumn":33},{"ruleId":"647","severity":1,"message":"696","line":21,"column":10,"nodeType":"649","messageId":"650","endLine":21,"endColumn":31},{"ruleId":"647","severity":1,"message":"697","line":24,"column":5,"nodeType":"649","messageId":"650","endLine":24,"endColumn":26},{"ruleId":"659","severity":1,"message":"660","line":61,"column":37,"nodeType":"661","messageId":"662","endLine":61,"endColumn":39},{"ruleId":"659","severity":1,"message":"660","line":71,"column":37,"nodeType":"661","messageId":"662","endLine":71,"endColumn":39},{"ruleId":"647","severity":1,"message":"689","line":3,"column":8,"nodeType":"649","messageId":"650","endLine":3,"endColumn":25},{"ruleId":"647","severity":1,"message":"691","line":5,"column":3,"nodeType":"649","messageId":"650","endLine":5,"endColumn":13},{"ruleId":"647","severity":1,"message":"692","line":6,"column":3,"nodeType":"649","messageId":"650","endLine":6,"endColumn":13},{"ruleId":"647","severity":1,"message":"684","line":9,"column":8,"nodeType":"649","messageId":"650","endLine":9,"endColumn":9},{"ruleId":"647","severity":1,"message":"703","line":20,"column":3,"nodeType":"649","messageId":"650","endLine":20,"endColumn":13},{"ruleId":"647","severity":1,"message":"704","line":21,"column":3,"nodeType":"649","messageId":"650","endLine":21,"endColumn":18},{"ruleId":"647","severity":1,"message":"693","line":29,"column":10,"nodeType":"649","messageId":"650","endLine":29,"endColumn":25},{"ruleId":"647","severity":1,"message":"694","line":31,"column":10,"nodeType":"649","messageId":"650","endLine":31,"endColumn":31},{"ruleId":"647","severity":1,"message":"695","line":32,"column":10,"nodeType":"649","messageId":"650","endLine":32,"endColumn":33},{"ruleId":"647","severity":1,"message":"696","line":33,"column":10,"nodeType":"649","messageId":"650","endLine":33,"endColumn":31},{"ruleId":"647","severity":1,"message":"706","line":39,"column":7,"nodeType":"649","messageId":"650","endLine":39,"endColumn":29},{"ruleId":"659","severity":1,"message":"660","line":85,"column":29,"nodeType":"661","messageId":"662","endLine":85,"endColumn":31},{"ruleId":"659","severity":1,"message":"660","line":198,"column":25,"nodeType":"661","messageId":"662","endLine":198,"endColumn":27},{"ruleId":"659","severity":1,"message":"660","line":212,"column":32,"nodeType":"661","messageId":"662","endLine":212,"endColumn":34},{"ruleId":"659","severity":1,"message":"660","line":231,"column":33,"nodeType":"661","messageId":"662","endLine":231,"endColumn":35},{"ruleId":"707","severity":1,"message":"708","line":10,"column":5,"nodeType":"709","messageId":"710","endLine":17,"endColumn":6},{"ruleId":"647","severity":1,"message":"688","line":19,"column":11,"nodeType":"649","messageId":"650","endLine":19,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":40,"column":11,"nodeType":"649","messageId":"650","endLine":40,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":61,"column":11,"nodeType":"649","messageId":"650","endLine":61,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":19,"column":11,"nodeType":"649","messageId":"650","endLine":19,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":41,"column":11,"nodeType":"649","messageId":"650","endLine":41,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":63,"column":11,"nodeType":"649","messageId":"650","endLine":63,"endColumn":14},{"ruleId":"647","severity":1,"message":"689","line":3,"column":8,"nodeType":"649","messageId":"650","endLine":3,"endColumn":25},{"ruleId":"647","severity":1,"message":"691","line":5,"column":5,"nodeType":"649","messageId":"650","endLine":5,"endColumn":15},{"ruleId":"647","severity":1,"message":"692","line":6,"column":5,"nodeType":"649","messageId":"650","endLine":6,"endColumn":15},{"ruleId":"647","severity":1,"message":"711","line":11,"column":8,"nodeType":"649","messageId":"650","endLine":11,"endColumn":13},{"ruleId":"647","severity":1,"message":"712","line":12,"column":8,"nodeType":"649","messageId":"650","endLine":12,"endColumn":13},{"ruleId":"647","severity":1,"message":"694","line":34,"column":10,"nodeType":"649","messageId":"650","endLine":34,"endColumn":31},{"ruleId":"647","severity":1,"message":"695","line":35,"column":10,"nodeType":"649","messageId":"650","endLine":35,"endColumn":33},{"ruleId":"647","severity":1,"message":"696","line":36,"column":10,"nodeType":"649","messageId":"650","endLine":36,"endColumn":31},{"ruleId":"647","severity":1,"message":"697","line":38,"column":5,"nodeType":"649","messageId":"650","endLine":38,"endColumn":26},{"ruleId":"647","severity":1,"message":"669","line":43,"column":8,"nodeType":"649","messageId":"650","endLine":43,"endColumn":26},{"ruleId":"659","severity":1,"message":"660","line":92,"column":37,"nodeType":"661","messageId":"662","endLine":92,"endColumn":39},{"ruleId":"659","severity":1,"message":"660","line":102,"column":37,"nodeType":"661","messageId":"662","endLine":102,"endColumn":39},{"ruleId":"659","severity":1,"message":"660","line":120,"column":33,"nodeType":"661","messageId":"662","endLine":120,"endColumn":35},{"ruleId":"659","severity":1,"message":"660","line":338,"column":34,"nodeType":"661","messageId":"662","endLine":338,"endColumn":36},{"ruleId":"659","severity":1,"message":"660","line":351,"column":33,"nodeType":"661","messageId":"662","endLine":351,"endColumn":35},{"ruleId":"659","severity":1,"message":"660","line":364,"column":32,"nodeType":"661","messageId":"662","endLine":364,"endColumn":34},{"ruleId":"659","severity":1,"message":"660","line":386,"column":33,"nodeType":"661","messageId":"662","endLine":386,"endColumn":35},{"ruleId":"659","severity":1,"message":"660","line":398,"column":30,"nodeType":"661","messageId":"662","endLine":398,"endColumn":32},{"ruleId":"659","severity":1,"message":"660","line":431,"column":33,"nodeType":"661","messageId":"662","endLine":431,"endColumn":35},{"ruleId":"647","severity":1,"message":"688","line":19,"column":11,"nodeType":"649","messageId":"650","endLine":19,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":40,"column":11,"nodeType":"649","messageId":"650","endLine":40,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":62,"column":11,"nodeType":"649","messageId":"650","endLine":62,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":85,"column":11,"nodeType":"649","messageId":"650","endLine":85,"endColumn":14},{"ruleId":"647","severity":1,"message":"689","line":3,"column":8,"nodeType":"649","messageId":"650","endLine":3,"endColumn":25},{"ruleId":"647","severity":1,"message":"690","line":4,"column":8,"nodeType":"649","messageId":"650","endLine":4,"endColumn":21},{"ruleId":"647","severity":1,"message":"691","line":5,"column":5,"nodeType":"649","messageId":"650","endLine":5,"endColumn":15},{"ruleId":"647","severity":1,"message":"692","line":6,"column":5,"nodeType":"649","messageId":"650","endLine":6,"endColumn":15},{"ruleId":"647","severity":1,"message":"684","line":9,"column":8,"nodeType":"649","messageId":"650","endLine":9,"endColumn":9},{"ruleId":"647","severity":1,"message":"682","line":28,"column":5,"nodeType":"649","messageId":"650","endLine":28,"endColumn":16},{"ruleId":"647","severity":1,"message":"713","line":31,"column":5,"nodeType":"649","messageId":"650","endLine":31,"endColumn":15},{"ruleId":"647","severity":1,"message":"714","line":32,"column":5,"nodeType":"649","messageId":"650","endLine":32,"endColumn":19},{"ruleId":"647","severity":1,"message":"715","line":33,"column":5,"nodeType":"649","messageId":"650","endLine":33,"endColumn":19},{"ruleId":"647","severity":1,"message":"693","line":35,"column":10,"nodeType":"649","messageId":"650","endLine":35,"endColumn":25},{"ruleId":"647","severity":1,"message":"694","line":37,"column":10,"nodeType":"649","messageId":"650","endLine":37,"endColumn":31},{"ruleId":"647","severity":1,"message":"695","line":38,"column":10,"nodeType":"649","messageId":"650","endLine":38,"endColumn":33},{"ruleId":"647","severity":1,"message":"696","line":39,"column":10,"nodeType":"649","messageId":"650","endLine":39,"endColumn":31},{"ruleId":"647","severity":1,"message":"697","line":41,"column":5,"nodeType":"649","messageId":"650","endLine":41,"endColumn":26},{"ruleId":"659","severity":1,"message":"660","line":93,"column":33,"nodeType":"661","messageId":"662","endLine":93,"endColumn":35},{"ruleId":"659","severity":1,"message":"660","line":113,"column":33,"nodeType":"661","messageId":"662","endLine":113,"endColumn":35},{"ruleId":"659","severity":1,"message":"660","line":130,"column":33,"nodeType":"661","messageId":"662","endLine":130,"endColumn":35},{"ruleId":"659","severity":1,"message":"660","line":270,"column":35,"nodeType":"661","messageId":"662","endLine":270,"endColumn":37},{"ruleId":"659","severity":1,"message":"660","line":283,"column":34,"nodeType":"661","messageId":"662","endLine":283,"endColumn":36},{"ruleId":"659","severity":1,"message":"660","line":296,"column":32,"nodeType":"661","messageId":"662","endLine":296,"endColumn":34},{"ruleId":"659","severity":1,"message":"660","line":318,"column":33,"nodeType":"661","messageId":"662","endLine":318,"endColumn":35},{"ruleId":"659","severity":1,"message":"660","line":330,"column":30,"nodeType":"661","messageId":"662","endLine":330,"endColumn":32},{"ruleId":"659","severity":1,"message":"660","line":363,"column":33,"nodeType":"661","messageId":"662","endLine":363,"endColumn":35},{"ruleId":"647","severity":1,"message":"688","line":19,"column":11,"nodeType":"649","messageId":"650","endLine":19,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":40,"column":11,"nodeType":"649","messageId":"650","endLine":40,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":63,"column":11,"nodeType":"649","messageId":"650","endLine":63,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":19,"column":11,"nodeType":"649","messageId":"650","endLine":19,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":40,"column":11,"nodeType":"649","messageId":"650","endLine":40,"endColumn":14},{"ruleId":"647","severity":1,"message":"688","line":19,"column":11,"nodeType":"649","messageId":"650","endLine":19,"endColumn":14},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","no-native-reassign",["716"],"no-negated-in-lhs",["717"],"'ThemeSelector' is defined but never used.","'PageConfigConsumer' is defined but never used.","'SidebarBottomA' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'PropTypes' is defined but never used.","'constant' is defined but never used.","'MenuListingService' is defined but never used.","'AuthenticationService' is defined but never used.","'FlatList' is defined but never used.","'FooterAuth' is defined but never used.","'faker' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'avatarImg' is assigned a value but never used.","'Config' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CustomInput' is defined but never used.","'classNames' is defined but never used.","'_' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'res' is assigned a value but never used.","'paginationFactory' is defined but never used.","'filterFactory' is defined but never used.","'Comparator' is defined but never used.","'dateFilter' is defined but never used.","'CustomExportCSV' is defined but never used.","'CustomPaginationPanel' is defined but never used.","'CustomSizePerPageButton' is defined but never used.","'CustomPaginationTotal' is defined but never used.","'buildCustomTextFilter' is defined but never used.","no-dupe-keys","Duplicate key 'password'.","ObjectExpression","Duplicate key 'name'.","'ButtonInput' is defined but never used.","'InputGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'DatePicker' is defined but never used.","'INITIAL_PRODUCTS_COUNT' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'axios' is defined but never used.","'paths' is defined but never used.","'Pagination' is defined but never used.","'PaginationItem' is defined but never used.","'PaginationLink' is defined but never used.","no-global-assign","no-unsafe-negation"]